{"version":3,"sources":["serviceWorker.ts","helpers.tsx","SingleInput.tsx","TotalProjectCost.tsx","PropertyInfo.tsx","DefaultValues.tsx","MonthYearPercentInput.tsx","TotalCostOutOfPocket.tsx","MonthlyMortgagePayment.tsx","TotalIncome.tsx","MonthYearInput.tsx","TotalExpenses.tsx","Evaluation.tsx","Projection.tsx","LoanBalanceValueEquity.tsx","Calculator.tsx","pages/HomePage.tsx","pages/Partials/PropertyInfo.tsx","pages/Components/NumberInput.tsx","pages/Partials/PurchaseInfo.tsx","pages/Partials/RentalInfo.tsx","pages/Partials/Results.tsx","pages/Partials/Report.tsx","pages/BrrrrCalculator.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","toCurrency","number","Number","isNaN","toLocaleString","undefined","maximumFractionDigits","calculateTotalProjectCost","purchasePrice","estimateRepairCost","purchaseClosingCost","preRentHoldingCost","calculateLoan","downPaymentPercentage","calculateDownPayment","calculateOutOfPocket","form","calculateValueByPercentage","totalValue","percentage","percentageValue","calculateTotalExpenses","rent","vacancyRate","repairsRate","capitalExpendituresRate","insuranceRate","propertyManagementRate","taxRate","floodInsuranceMonthlyCost","electricityMonthlyCost","waterMonthlyCost","sewerMonthlyCost","gasMonthlyCost","garbageMonthlyCost","hoaMonthlyCost","calculateMonthlyMortgagePayment","calculateMonthlyCashFlow","calculateROIWithoutMortgage","totalExpensesWithoutMortgage","calculateROI","calculateProjectionSalePrice","afterRepairValue","appreciation","projectionYear","Math","pow","calculateProjectionSaleExpenses","calculateProjectionLoanPayoff","loanPeriod","interestRate","loanInterestRate","loan","getRemainingBalance","originalBalance","numOfPayments","totalNumberOfPayments","rate","monthlyRate","calculateProjectionTotalInvestedCapital","calculateProjectionSaleProfit","calculateProjectionTotalCashflow","calculateProjectionTotalProfit","projectionTotalCashflow","calculateProjectionROI","getNumbersOnly","text","replace","n","i","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","calculateMonthlyTotalIncome","monthlyRent","otherMonthlyIncome","calculateTotalMonthyOperatingExpenses","data","monthlyElectricyCost","monthlyWaterAndSewerCost","monthlyGarbageCost","monthlyHoaCost","otherMontnlyExpenses","calculateMonthlyVacancyCost","calculateMonthlyRepairsCost","calculateMonthlyCapitalExpendituresCost","calculateMonthlyInsuranceCost","calculateMonthlyTaxCost","calculateMonthlyManagementCost","totalMonthlyIncome","repairsAndMaintenanceRate","annualPropertyTaxes","calculateMonthlyTotalExpenses","mortgage","operatingExpenses","caculateProjectedNumber","initialNumber","growthRate","projectedYear","finalAmount","calculateProjectedTotalAnnualIncome","totalIncome","annualIncomeGrowth","calculateProjectedTotalAnnualExpenses","annualMortgage","projectedOperatingExpenses","calculateProjectedAnnualOperatingExpenses","calculateProjectedCashOnCashROI","annualCashflow","calculateProjectedTotalAnnualCashflow","outOfPocket","ROI","calculateProjectedTotalCashflow","totalCashflow","annualOperatingExpenses","annualExpensesGrowth","calculateProjectedLoanBalance","loanBalance","calculateProjectedPropertyValue","afterRepairPrice","annualPropertyValueGrowth","calculateProjectedEquity","calculateProjectedTotalProfitIfSold","projectedPropertyValue","saleCommission","salesExpenses","equity","totalProfit","calculateProjectedAnnualizedTotalReturn","projectedProfit","totalInvestmentReturn","annualizedReturn","calculateNetOperatingIncome","calculatePurchaseCapRate","calculateProFormaCap","SingleInput","label","inputName","inputValue","additionalInfoText","handleOnChange","disabled","prefix","suffix","required","roundValue","isNumberInput","isInvalid","ceil","strValue","className","name","onChange","type","TotalProjectCost","PropertyInfo","handleTextOnChange","askingPrice","address","DefaultValues","defaults","handleOnSubmit","React","localDefaults","setLocalDefaults","event","trimmedValue","target","showModal","setShowModal","handleClose","Button","variant","onClick","Modal","show","onHide","size","Header","closeButton","Title","Body","Footer","MonthYearPercentInput","wholeMonthlyValue","setFormValueByName","disableYear","monthAppendValue","monthlyValue","handleYearInputOnChange","monthValue","round","yearValue","getYearInput","TotalCostOutOfPocket","MonthlyMortgagePayment","monthlyMortgagePayment","TotalIncome","MonthYearInput","TotalExpenses","Evaluation","Projection","LoanBalanceValueEquity","numberOfYear","points","loanPayoff","floor","propertyValue","push","getGraphPoints","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","verticalAlign","align","stroke","fill","fillOpacity","Calculator","initialDefaults","purchaseClosingCosts","setDefaults","savedForm","setSavedForm","setForm","newForm","to","newDefaults","style","marginRight","HomePage","marginTop","FormControl","city","state","zip","mlsNumber","salesDescription","NumberInput","PurchaseInfo","RentalInfo","monthlyPmiCost","AnalysisOverTime","projectionYears","projectedNumbersByYear","map","year","totalExpenses","mortgagePayment","cashOnCashROI","totalProfitIfSold","annualizedTotalReturn","Table","bordered","hover","numbers","paddingLeft","Report","pairs","hasFullAddress","setKey","summary","formatDataPointValue","toFixed","formatDataPointLabel","fiftyPercentRule","displayKeyValuePairs2","x","Row","Col","md","xs","getExpenseTabKeyValuePairs","getIncomeTabKeyValuePairs","Container","displayKeyValuePairs","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","chartType","loader","options","rootProps","BrrrrCalculator","savedData","setSavedData","setData","wordBreak","App","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"2RAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6DCdOC,EAAa,SAACC,GACzB,OAAIC,OAAOC,MAAMF,GACR,GAEcA,EAAOG,oBAAeC,EAAW,CACtDC,sBAAuB,KAMdC,EAA4B,SAAC,GAKV,IAAD,IAJ7BC,qBAI6B,MAJb,EAIa,MAH7BC,0BAG6B,MAHR,EAGQ,MAF7BC,2BAE6B,MAFP,EAEO,MAD7BC,mBAOA,OAJGH,GAAiB,IACjBC,GAAsB,IACtBC,GAAuB,UAJG,MADR,EACQ,IAKJ,IAIdE,EAAgB,SAAC,GAGE,IAAD,IAF7BC,6BAE6B,MAFL,EAEK,MAD7BL,cAIA,YAH6B,MADb,EACa,IACE,IAAMK,GAA0B,KAKpDC,EAAuB,SAAC,GAGb,IAAD,IAFrBD,6BAEqB,MAFG,EAEH,MADrBL,cAIA,YAHqB,MADL,EACK,GACgBK,EAAyB,KAKnDE,EAAuB,SAACC,GAKnC,OAJyBT,EAA0BS,GACtCJ,EAAcI,IAMhBC,EAA6B,WAAqC,IAApCC,EAAmC,uDAAtB,EAAGC,EAAmB,uDAAN,EAChEC,EAAmBD,EAAa,IAAOD,EAE7C,OAAOE,GAGIC,EAAyB,SAACL,GAAoB,IAEvDM,EAeEN,EAfFM,KACAC,EAcEP,EAdFO,YACAC,EAaER,EAbFQ,YACAC,EAYET,EAZFS,wBACAC,EAWEV,EAXFU,cACAC,EAUEX,EAVFW,uBACAnB,EASEQ,EATFR,cACAoB,EAQEZ,EARFY,QACAC,EAOEb,EAPFa,0BACAC,EAMEd,EANFc,uBACAC,EAKEf,EALFe,iBACAC,EAIEhB,EAJFgB,iBACAC,EAGEjB,EAHFiB,eACAC,EAEElB,EAFFkB,mBACAC,EACEnB,EADFmB,eAmCF,OAjCiBC,EAAgCpB,GAC7BC,EAA2BK,EAAMC,GACjCN,EAA2BK,EAAME,GACrBP,EAC9BK,EACAG,GAEoBR,EACpBT,EAAgB,GAChBkB,GAEcT,EAA2BT,EAAgB,GAAIoB,IAa5DC,GAA6B,IAC7BC,GAA0B,IAC1BC,GAAoB,IACpBC,GAAoB,IACpBC,GAAkB,IAClBC,GAAsB,IACtBC,GAAkB,GAlBiBlB,EACpCK,EACAK,IAsBSU,EAA2B,SAACrB,GAGvC,OAFiBA,EAAKM,KAAOD,EAAuBL,IAKzCsB,EAA8B,SAACtB,GAC1C,IAAMuB,EACJlB,EAAuBL,GAAQoB,EAAgCpB,GAOjE,OAJiD,IAA5CA,EAAKM,KAAOiB,GACbxB,EAAqBC,GACvB,KAKSwB,EAAe,SAACxB,GAI3B,OAFyB,GADRqB,EAAyBrB,GACXD,EAAqBC,GAAS,KAKlDyB,EAA+B,SAAC,GAI5B,IAHfC,EAGc,EAHdA,iBACAC,EAEc,EAFdA,aACAC,EACc,EADdA,eAOA,OAFEF,EAAmBG,KAAKC,IAAI,EAAIH,EAAe,IAAKC,IAK3CG,EAAkC,SAAC,GAM9C,MAFwC,IAF1B,EADdL,iBAG+C,IAAO,KAK3CM,EAAgC,SAAChC,GAAoB,IACxD4B,EAA+D5B,EAA/D4B,eAAgBK,EAA+CjC,EAA/CiC,WAA8BC,EAAiBlC,EAAnCmC,iBAC9BC,EAAOxC,EAAcI,GAS3B,OAPiBqC,EACfD,EACiB,GAAjBR,EACa,GAAbK,EACAC,EAAe,MAMbG,EAAsB,SAC1BC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAcD,EAAO,GAQ3B,OALGH,GACET,KAAKC,IAAI,EAAIY,EAAaF,GACzBX,KAAKC,IAAI,EAAIY,EAAaH,KAC7BV,KAAKC,IAAI,EAAIY,EAAaF,GAAyB,IAK3CG,EAA0C,SAAC3C,GAGtD,OAF6BD,EAAqBC,IAKvC4C,EAAgC,SAAC5C,GAS5C,OARkByB,EAA6BzB,GAC1B+B,EAAgC/B,GAClCgC,EAA8BhC,GACpBD,EAAqBC,IAQvC6C,EAAmC,SAAC7C,GAC/C,IAAM4B,EAAiB5B,EAAK4B,eAI5B,OAF2C,GAD1BP,EAAyBrB,GACM4B,GAKrCkB,EAAiC,SAAC9C,GAC7C,IAAM+C,EAA0BF,EAAiC7C,GAKjE,OAJmB4C,EAA8B5C,GAEhB+C,GAItBC,EAAyB,SAAChD,GAMrC,OALoB8C,EAA+B9C,GACtBD,EAAqBC,GACrCA,EAAK4B,eAEiD,KAIxDqB,EAAiB,SAACC,GAC7B,OAAOA,EAAKC,QAAQ,MAAO,KAGhB/B,EAAkC,SAACpB,GAA2B,IAAD,EACvBA,EAAzCiC,kBADgE,MACnD,EADmD,IACvBjC,EAAzBmC,wBADgD,MAC7B,EAD6B,EAElEC,EAAOxC,EAAcI,GAG3B,IAAKmC,EACH,OAAOC,GAAqB,GAAbH,GAKjB,IAAMmB,EAAiB,GAAbnB,EACJoB,EAAIlB,EAAmB,IAAM,GAInC,OAF+BC,IADpBP,KAAKC,IAAI,EAAIuB,EAAGD,GAAK,IAAMC,EAAIxB,KAAKC,IAAI,EAAIuB,EAAGD,MAM/CE,EAAkB,SAACC,EAAaC,GAAsB,MAG3BC,oBAAS,WAC7C,IAEE,IAAMC,EAAO9E,OAAO+E,aAAaC,QAAQL,GAEzC,OAAOG,EAAOG,KAAKC,MAAMJ,GAAQF,EACjC,MAAOO,GAGP,OADAC,QAAQC,IAAIF,GACLP,MAZsD,mBAG1DU,EAH0D,KAG7CC,EAH6C,KAiCjE,MAAO,CAACD,EAfS,SAACE,GAChB,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfzF,OAAO+E,aAAaY,QAAQhB,EAAKM,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,OAOLU,EAA8B,SAAC,GAG/B,IAAD,IAFVC,mBAEU,MAFI,EAEJ,MADVC,mBAEA,OAAOD,QADG,MADW,EACX,IAICE,EAAwC,SAACC,GAAwB,IAAD,EAOvEA,EALFC,4BAFyE,MAElD,EAFkD,IAOvED,EAJFE,gCAHyE,MAG9C,EAH8C,IAOvEF,EAHFG,0BAJyE,MAIpD,EAJoD,IAOvEH,EAFFI,sBALyE,MAKxD,EALwD,IAOvEJ,EADFK,4BANyE,MAMlD,EANkD,EAoC3E,OA1BEC,EAA4BN,GAC5BO,EAA4BP,GAC5BQ,EAAwCR,GACxCS,EAA8BT,GAC9BU,EAAwBV,GACxBW,EAA+BX,IAC9BC,GAAwB,IACxBC,GAA4B,IAC5BC,GAAsB,IACtBC,GAAkB,IAClBC,GAAwB,IAmBhBC,EAA8B,SAACN,GAC1C,IAAMY,EAAqBhB,EAA4BI,GAEvD,OAAO5E,EAA2BwF,EAAoBZ,EAAKtE,cAGhDiF,EAAiC,SAACX,GAC7C,OAAO5E,EACL4E,EAAKH,YACLG,EAAKlE,yBAGI0E,EAA0C,SAACR,GACtD,IAAMY,EAAqBhB,EAA4BI,GAEvD,OAAO5E,EACLwF,EACAZ,EAAKpE,0BAGI2E,EAA8B,SAACP,GAC1C,IAAMY,EAAqBhB,EAA4BI,GAEvD,OAAO5E,EACLwF,EACAZ,EAAKa,4BAGIJ,EAAgC,SAACT,GAC5C,IAAMY,EAAqBhB,EAA4BI,GAEvD,OAAO5E,EAA2BwF,EAAoBZ,EAAKnE,gBAEhD6E,EAA0B,SAACV,GACtC,OAAOA,EAAKc,oBAAsB,IAGvBC,EAAgC,SAACf,GAC5C,IAAMgB,EAAWzE,EAAgCyD,GAC3CiB,EAAoBlB,EAAsCC,GAIhE,OAFsB3F,OAAO2G,GAAY3G,OAAO4G,IAKrCC,EAA0B,WAIjC,IAHJC,EAGG,uDAHa,EAChBC,EAEG,uDAFU,EACbC,EACG,uDADa,EAEVC,EACJH,EAAgBnE,KAAKC,IAAI,EAAImE,EAAa,IAAKC,GAEjD,OAAOC,GAGIC,EAAsC,SACjDvB,GAEY,IADZjD,EACW,uDADM,EAEXyE,EAAkD,GAApC5B,EAA4BI,GAEhD,OAAOkB,EACLM,EACAxB,EAAKyB,mBACL1E,IAIS2E,EAAwC,SACnD1B,GAEY,IADZjD,EACW,uDADM,EAEX4E,EAAyD,GAAxCpF,EAAgCyD,GACjD4B,EAA6BC,EACjC7B,EACAjD,GAIF,OAAO4E,EAAiBC,GAGbE,EAAkC,SAC7C9B,GAEY,IADZjD,EACW,uDADM,EAEXgF,EAAiBC,EACrBhC,EACAjD,GAEIkF,EAAc/G,EAAqB8E,GAInCkC,EAAOH,EAAiBE,EAAe,IAE7C,OAAOC,GAGIF,EAAwC,SACnDhC,GAEI,IADJjD,EACG,uDADc,EAEjB,OACEwE,EAAoCvB,EAAMjD,GAC1C2E,EAAsC1B,EAAMjD,IAInCoF,EAAkC,SAC7CnC,GAIA,IAFI,IADJjD,EACG,uDADc,EAEbqF,EAAgB,EACX5D,EAAI,EAAGA,EAAIzB,EAAgByB,IAClC4D,GACEb,EAAoCvB,EAAMxB,GAC1CkD,EAAsC1B,EAAMxB,GAEhD,OAAO4D,GAGIP,EAA4C,SACvD7B,GAEY,IADZjD,EACW,uDADM,EAEXsF,EAC0C,GAA9CtC,EAAsCC,GAGxC,OAAOkB,EACLmB,EACArC,EAAKsC,qBACLvF,IAISwF,EAAgC,SAC3CvC,GAEI,IADJjD,EACG,uDADc,EAETK,EAA+C4C,EAA/C5C,WAA8BC,EAAiB2C,EAAnC1C,iBACdC,EAAOxC,EAAciF,GAEvBwC,EAAchF,EAChBD,EACiB,GAAjBR,EACa,GAAbK,EACAC,EAAe,KAGjB,OAAOmF,GAGIC,EAAkC,SAC7CzC,GAEI,IADJjD,EACG,uDADc,EAEjB,OAAOmE,EACLlB,EAAK0C,kBAAoB1C,EAAKrF,cAC9BqF,EAAK2C,0BACL5F,IAIS6F,EAA2B,SAAC5C,GAAoC,IAAxBjD,EAAuB,uDAAN,EACpE,OACE0F,EAAgCzC,EAAMjD,GACtCwF,EAA8BvC,EAAMjD,IAI3B8F,GAAsC,SACjD7C,GAEI,IADJjD,EACG,uDADc,EAGX+F,EAAyBL,EAC7BzC,EACAjD,GAEIgG,EAAiB3H,EACrB0H,EACA9C,EAAKgD,eAEDC,EAASL,EAAyB5C,EAAMjD,GAExCkF,EAAc/G,EAAqB8E,GACnCoC,EAAgBD,EAAgCnC,EAAMjD,GAEtDmG,EAAcD,EAASF,EAAiBd,EAAcG,EAE5D,OAAOc,GAGIC,GAA0C,SACrDnD,GAEI,IADJjD,EACG,uDADc,EAEXqG,EAAkBP,GACtB7C,EACAjD,GAEIkF,EAAc/G,EAAqB8E,GAEnCqD,EAAwBD,EAAkBnB,EAE1CqB,EAC4D,KAA/DtG,KAAKC,IAAI,EAAIoG,EAAuB,EAAItG,GAAkB,GAM7D,OAAOuG,GAGIC,GAA8B,SAACvD,GAC1C,OACEuB,EAAoCvB,GACpC6B,EAA0C7B,IAIjCwD,GAA2B,SAACxD,GACvC,OAAQuD,GAA4BvD,GAAQA,EAAKrF,cAAiB,KAGvD8I,GAAuB,SAACzD,GACnC,OAAQuD,GAA4BvD,GAAQA,EAAK0C,iBAAoB,KC5fxDgB,GAhDK,SAAC,GAYP,IAXZC,EAWW,EAXXA,MACAC,EAUW,EAVXA,UACAC,EASW,EATXA,WACAC,EAQW,EARXA,mBACAC,EAOW,EAPXA,eACAC,EAMW,EANXA,SACAC,EAKW,EALXA,OACAC,EAIW,EAJXA,OACAC,EAGW,EAHXA,SAGW,IAFXC,kBAEW,SADXC,EACW,EADXA,cAEIC,EAAY,GACZH,IAAaN,IACfS,EAAY,cAGd,IAAI/E,EAAQ6E,EAAapH,KAAKuH,KAAKV,GAAcA,EAE3CW,EAAWjF,EAAQpF,EAAWE,OAAOkF,IAAU,GAErD,OACE,yBAAKkF,UAAU,yBACb,2BAAOA,UAAU,YAAYd,GAC7B,yBAAKc,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAoBR,IAEtC,2BACEQ,UAAW,gBAAkBH,EAC7BI,KAAMd,EACNrE,MAAOiF,EACPG,SAAUZ,EACVC,SAAUA,EACVY,KAAMP,EAAgB,SAAW,KAEnC,yBAAKI,UAAU,sBACb,0BAAMA,UAAU,oBAAoBP,MAI1C,yBAAKO,UAAU,YAAYX,KCIlBe,GAtDU,SAAC,GAAqC,IAAnC1J,EAAkC,EAAlCA,KAAM4I,EAA4B,EAA5BA,eAE9BpJ,EAIEQ,EAJFR,cACAE,EAGEM,EAHFN,oBACAC,EAEEK,EAFFL,mBACAF,EACEO,EADFP,mBAEF,OACE,6BACE,uDAC2BT,EAAWO,EAA0BS,KAEhE,kBAAC,GAAD,CACEwI,MAAM,iBACNE,WAAYlJ,EACZiJ,UAAU,gBACVG,eAAgBA,EAChBE,OAAQ,IACRE,UAAU,IAEZ,kBAAC,GAAD,CACER,MAAM,wBACNE,WAAYhJ,EACZ+I,UAAU,sBACVG,eAAgBA,EAChBE,OAAQ,MAGV,kBAAC,GAAD,CACEN,MAAM,wBACNE,WAAY/I,EACZ8I,UAAU,qBACVG,eAAgBA,EAChBE,OAAQ,MAGV,kBAAC,GAAD,CACEN,MAAM,oBACNE,WAAYjJ,EACZgJ,UAAU,qBACVG,eAAgBA,EAChBE,OAAQ,MAGV,kBAAC,GAAD,CACEN,MAAM,qBACNE,WAAYnJ,EAA0BS,GACtC8I,OAAQ,IACRD,UAAU,MCnBHc,GA7BM,SAAC,GAAyD,IAAvD3J,EAAsD,EAAtDA,KAAM4I,EAAgD,EAAhDA,eAAgBgB,EAAgC,EAAhCA,mBACpCC,EAAgB7J,EAAhB6J,YACR,OACE,6BACE,yBAAKP,UAAU,wBACb,2BAAOA,UAAU,YAAjB,WACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEA,UAAW,eACXC,KAAM,UACNnF,MAAOpE,EAAK8J,QACZN,SAAUI,EACVH,KAAM,YAKd,kBAAC,GAAD,CACEjB,MAAM,eACNC,UAAU,cACVC,WAAYmB,EACZjB,eAAgBA,EAChBE,OAAQ,Q,UCmJDiB,GA1KO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,eAA4B,EACnBC,IAAMzG,SAAN,eAAoBuG,IADD,mBACtDG,EADsD,KACvCC,EADuC,KAGvDxB,EAAiB,SAACyB,GACtB,IAAMC,EAAeD,EAAME,OAAOnG,MAAMjB,QAAQ,KAAM,IACjDhE,MAAMD,OAAOoL,KAChBF,EAAiB,eACZD,EADW,eAEbE,EAAME,OAAOhB,KAAOrK,OAAOoL,OAR2B,EAa3BJ,IAAMzG,UAAS,GAbY,mBAatD+G,EAbsD,KAa3CC,EAb2C,KAevDC,EAAc,kBAAMD,GAAa,IAUrC/K,EAYEyK,EAZFzK,oBACAuC,EAWEkI,EAXFlI,WACAE,EAUEgI,EAVFhI,iBACAtC,EASEsK,EATFtK,sBACAU,EAQE4J,EARF5J,YACAC,EAOE2J,EAPF3J,YACAC,EAME0J,EANF1J,wBACAC,EAKEyJ,EALFzJ,cACAE,EAIEuJ,EAJFvJ,QACAD,EAGEwJ,EAHFxJ,uBACAiB,EAEEuI,EAFFvI,eACAD,EACEwI,EADFxI,aAGF,OACE,oCACE,kBAACgJ,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzBX,kBAAMJ,GAAa,IAyBanB,UAAU,eAAzD,iBAGA,kBAACwB,GAAA,EAAD,CAAOC,KAAMP,EAAWQ,OAAQN,EAAaO,KAAK,MAChD,kBAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,GAAA,EAAMM,MAAP,kBAEF,kBAACN,GAAA,EAAMO,KAAP,KACE,8BACE,6BACE,kBAAC,GAAD,CACE7C,MAAM,yBACNC,UAAU,sBACVC,WAAYhJ,EACZkJ,eAAgBA,EAChBE,OAAQ,MAEV,kBAAC,GAAD,CACEN,MAAM,cACNC,UAAU,aACVC,WAAYzG,EACZ2G,eAAgBA,EAChBG,OAAQ,QACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,gBACNC,UAAU,mBACVC,WAAYvG,EACZyG,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,0BACNC,UAAU,wBACVC,WAAY7I,EACZ+I,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,eACNC,UAAU,cACVC,WAAYnI,EACZqI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,oBACNC,UAAU,cACVC,WAAYlI,EACZoI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,iCACNC,UAAU,0BACVC,WAAYjI,EACZmI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,iBACNC,UAAU,gBACVC,WAAYhI,EACZkI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,WACNC,UAAU,UACVC,WAAY9H,EACZgI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,2BACNC,UAAU,yBACVC,WAAY/H,EACZiI,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,kBACNC,UAAU,iBACVC,WAAY9G,EACZgH,eAAgBA,EAChBG,OAAQ,QACRE,YAAY,EACZC,eAAa,IAEf,kBAAC,GAAD,CACEV,MAAM,eACNC,UAAU,eACVC,WAAY/G,EACZiH,eAAgBA,EAChBG,OAAQ,IACRE,YAAY,EACZC,eAAa,OAKrB,kBAAC4B,GAAA,EAAMQ,OAAP,KACE,kBAACX,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA/IX,WACrBZ,EAAeE,GAEfO,MA4IM,oBC5CKa,GArGe,SAAC,GAUjB,IATZ/C,EASW,EATXA,MACAC,EAQW,EARXA,UACAE,EAOW,EAPXA,mBACAvI,EAMW,EANXA,gBACAoL,EAKW,EALXA,kBACA5C,EAIW,EAJXA,eACA6C,EAGW,EAHXA,mBACAC,EAEW,EAFXA,YACAC,EACW,EADXA,iBAEMC,EAAe3L,EACnBuL,EACApL,GAGIyL,EAA0B,SAC9BxB,GAEA,IAAMjG,EACHlF,OAAO+D,EAAeoH,EAAME,OAAOnG,QAAU,GAAKoH,EACnD,IACFC,EAAmBhD,EAAWrE,IAW1B0H,EAAaF,EAAe5M,EAAW6C,KAAKuH,KAAKwC,IAAiB,GAElExH,EAAQvC,KAAKkK,MAAwB,IAAlB3L,GAAyB,IAwBlD,OACE,yBAAKkJ,UAAU,wBACb,2BAAOA,UAAU,YAAYd,GAE7B,yBAAKc,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,MAEF,2BACEA,UAAU,eACVlF,MAAO0H,EACPtC,SA9CuB,SAC/Ba,GAEA,IAAMjG,EACHlF,OAAO+D,EAAeoH,EAAME,OAAOnG,QAAUoH,EAAqB,IACrEC,EAAmBhD,EAAWrE,MA2CxB,yBAAKkF,UAAU,sBACb,0BAAMA,UAAU,oBAAoBqC,MAtCzB,WACnB,GAAID,EACF,OAAO,KAGT,IAAMM,EAAYJ,EACd5M,EAAW6C,KAAKuH,KAAoB,GAAfwC,IACrB,GACJ,OACE,yBAAKtC,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEA,UAAU,eACVlF,MAAO4H,EACPxC,SAAUqC,IAEZ,yBAAKvC,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,WAyBL2C,GAED,yBAAK3C,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEA,UAAU,eACVG,KAAK,SACLrF,MAAOA,EACPmF,KAAMd,EACNe,SAAUZ,IAEZ,yBAAKU,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,QAIN,yBAAKA,UAAU,aACb,0BAAMA,UAAU,WAAWX,MCnEpBuD,GA1Cc,SAAC,GAIhB,IAHZlM,EAGW,EAHXA,KACA4I,EAEW,EAFXA,eACA6C,EACW,EADXA,mBAEQ5L,EAAyCG,EAAzCH,sBAAuBL,EAAkBQ,EAAlBR,cAEzB4C,EAAOxC,EAAcI,GACrB8G,EAAc/G,EAAqBC,GAEzC,OACE,6BACE,6DACiChB,EAAWe,EAAqBC,KAEjE,kBAAC,GAAD,CACEwI,MAAM,eACNC,UAAU,wBACVrI,gBAAiBP,EACjB2L,kBAAmBhM,EACnBoJ,eAAgBA,EAChB6C,mBAAoBA,EACpBC,aAAa,IAGf,kBAAC,GAAD,CACElD,MAAM,OACNM,OAAQ,IACRD,UAAU,EACVH,WAAYtG,IAGd,kBAAC,GAAD,CACEoG,MAAM,gBACNE,WAAY5B,EACZgC,OAAQ,IACRD,UAAU,MCNHsD,GAhCgB,SAAC,GAAqC,IAAnCnM,EAAkC,EAAlCA,KAAM4I,EAA4B,EAA5BA,eAC9B3G,EAAiCjC,EAAjCiC,WAAYE,EAAqBnC,EAArBmC,iBAEdiK,EAAyBhL,EAAgCpB,GAE/D,OACE,6BACE,6DACiChB,EAAWoN,GAD5C,QAIA,kBAAC,GAAD,CACE5D,MAAM,cACNE,WAAYzG,EACZwG,UAAU,aACVG,eAAgBA,EAChBG,OAAO,UAGT,kBAAC,GAAD,CACEP,MAAM,gBACNE,WAAYvG,EACZsG,UAAU,mBACVG,eAAgBA,EAChBG,OAAO,IACPE,YAAY,EACZC,eAAa,MCPNmD,GAnBK,SAAC,GAAqC,IAAnCrM,EAAkC,EAAlCA,KAAM4I,EAA4B,EAA5BA,eACnBtI,EAASN,EAATM,KACR,OACE,6BACE,kDAAwBtB,EAAWsB,GAAQ,GAA3C,QAEA,kBAAC,GAAD,CACEkI,MAAM,OACNE,WAAYpI,EACZmI,UAAU,OACVG,eAAgBA,EAChBE,OAAQ,IACRC,OAAO,OACPC,UAAU,MCqCHsD,GAjDQ,SAAC,GAMV,IALZ9D,EAKW,EALXA,MACAC,EAIW,EAJXA,UACAC,EAGW,EAHXA,WACAE,EAEW,EAFXA,eACA6C,EACW,EADXA,mBASA,OACE,yBAAKnC,UAAU,yBACb,2BAAOA,UAAU,YAAYd,GAC7B,yBAAKc,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,MAEF,2BACEA,UAAU,eACVC,KAAMd,EACNrE,MAAOsE,EAAa1J,EAAW6C,KAAKuH,KAAKV,IAAe,GACxDc,SAAUZ,IAEZ,yBAAKU,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,WAIN,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEA,UAAU,eACVlF,MAAOsE,EAAa1J,EAAwB,GAAb0J,GAAmB,GAClDc,SA/BsB,SAC9Ba,GAEA,IAAMjG,EAAQlF,OAAOmL,EAAME,OAAOnG,MAAMjB,QAAQ,MAAO,KAAO,GAC9DsI,EAAmBhD,EAAWrE,MA6BxB,yBAAKkF,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,aCiGGiD,GApIO,SAAC,GAAyD,IAAvDvM,EAAsD,EAAtDA,KAAM4I,EAAgD,EAAhDA,eAAgB6C,EAAgC,EAAhCA,mBACvC5F,EAAWzE,EAAgCpB,GAEjD,OACE,6BACE,oDACwBhB,EAAWqB,EAAuBL,IAD1D,QAIA,kBAAC,GAAD,CACEwI,MAAM,WACNE,WAAY7C,EACZgD,UAAU,EACVC,OAAO,IACPC,OAAO,SAGT,kBAAC,GAAD,CACEP,MAAM,UACNC,UAAU,cACVrI,gBAAiBJ,EAAKO,YACtBiL,kBAAmBxL,EAAKM,KACxBsI,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAEnB,kBAAC,GAAD,CACEnD,MAAM,UACNC,UAAU,cACVrI,gBAAiBJ,EAAKQ,YACtBgL,kBAAmBxL,EAAKM,KACxBsI,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAEnB,kBAAC,GAAD,CACEnD,MAAM,uBACNC,UAAU,0BACVrI,gBAAiBJ,EAAKS,wBACtB+K,kBAAmBxL,EAAKM,KACxBsI,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAEnB,kBAAC,GAAD,CACEnD,MAAM,YACNC,UAAU,gBACVrI,gBAAiBJ,EAAKU,cACtB8K,kBAAmBxL,EAAKR,cAAgB,GACxCoJ,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAEnB,kBAAC,GAAD,CACEnD,MAAM,QACNC,UAAU,UACVrI,gBAAiBJ,EAAKY,QACtB4K,kBAAmBxL,EAAKR,cAAgB,GACxCoJ,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAEnB,kBAAC,GAAD,CACEnD,MAAM,kBACNC,UAAU,4BACVC,WAAY1I,EAAKa,0BACjB+H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,cACNC,UAAU,yBACVC,WAAY1I,EAAKc,uBACjB8H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,QACNC,UAAU,mBACVC,WAAY1I,EAAKe,iBACjB6H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,QACNC,UAAU,mBACVC,WAAY1I,EAAKgB,iBACjB4H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,MACNC,UAAU,iBACVC,WAAY1I,EAAKiB,eACjB2H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,UACNC,UAAU,qBACVC,WAAY1I,EAAKkB,mBACjB0H,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,MACNC,UAAU,iBACVC,WAAY1I,EAAKmB,eACjByH,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CACEjD,MAAM,sBACNC,UAAU,yBACVrI,gBAAiBJ,EAAKW,uBACtB6K,kBAAmBxL,EAAKM,KACxBsI,eAAgBA,EAChB6C,mBAAoBA,EACpBE,iBAAiB,SAGnB,kBAAC,GAAD,CACEnD,MAAM,iBACNE,WAAYrI,EAAuBL,GACnC6I,UAAU,EACVC,OAAO,IACPC,OAAO,WCvGAyD,GA3BI,SAAC,GAAqB,IAAnBxM,EAAkB,EAAlBA,KACpB,OACE,6BACE,6CACA,kBAAC,GAAD,CACEwI,MAAM,WACNE,WAAYrH,EAAyBrB,GACrC8I,OAAO,IACPC,OAAO,OACPF,UAAU,IAEZ,kBAAC,GAAD,CACEL,MAAM,yBACNE,WAAYpH,EAA4BtB,GACxC+I,OAAO,IACPF,UAAU,IAEZ,kBAAC,GAAD,CACEL,MAAM,MACNE,WAAYlH,EAAaxB,GACzB+I,OAAO,IACPF,UAAU,MC+EH4D,GA9FI,SAAC,GAAqC,IAAnCzM,EAAkC,EAAlCA,KAAM4I,EAA4B,EAA5BA,eAClBhH,EAAmD5B,EAAnD4B,eAAgBF,EAAmC1B,EAAnC0B,iBAAkBC,EAAiB3B,EAAjB2B,aAE1C,OACE,6BACE,6CAEA,kBAAC,GAAD,CACE6G,MAAM,OACNE,WAAY9G,EACZ6G,UAAU,iBACVG,eAAgBA,EAChBG,OAAO,QAGT,kBAAC,GAAD,CACEP,MAAM,2BACNE,WAAYhH,EACZ+G,UAAU,mBACVG,eAAgBA,EAChBE,OAAO,IACPE,UAAU,IAGZ,kBAAC,GAAD,CACER,MAAM,eACNE,WAAY/G,EACZ8G,UAAU,eACVG,eAAgBA,EAChBG,OAAO,IACPE,YAAY,EACZN,mBAAmB,2BACnBO,eAAe,IAGjB,kBAAC,GAAD,CACEV,MAAM,aACNE,WAAYjH,EAA6BzB,GACzC8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,gBACNE,WAAY3G,EAAgC/B,GAC5C8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,cACNE,WAAY1G,EAA8BhC,GAC1C8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,yBACNE,WAAY/F,EAAwC3C,GACpD8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,SACNE,WAAY9F,EAA8B5C,GAC1C8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,iBACNE,WAAY7F,EAAiC7C,GAC7C8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,+BACNE,WAAY5F,EAA+B9C,GAC3C8I,OAAO,IACPD,UAAU,IAGZ,kBAAC,GAAD,CACEL,MAAM,MACNE,WAAY1F,EAAuBhD,GACnC+I,OAAO,IACPF,UAAU,M,SCVH6D,GAtEgB,SAAC,GAAqB,IAAnB1M,EAAkB,EAAlBA,KA2B1B6E,EA1BiB,SAAC8H,GAEtB,IADA,IAAMC,EAAuB,GACpBvJ,EAAI,EAAGA,GAAKsJ,EAActJ,GAAQ,EAAG,CAC5C,IAAMwJ,EAAahL,KAAKiL,MACtB9K,EAA8B,eACzBhC,EADwB,CAE3B4B,eAAgByB,MAGd0J,EAAgBlL,KAAKiL,MACzBrL,EAA6B,eACxBzB,EADuB,CAE1B4B,eAAgByB,MAGpBuJ,EAAOI,KAAK,CACVzD,KAAK,QAAD,OAAUlG,GACdyE,OAAQiF,EAAgBF,EACxBA,WAAYA,EACZE,cAAeA,IAInB,OAAOH,EAGIK,CAAe,IAI5B,OACE,6BACE,kBAAC,KAAD,CACEC,MAAO,IACPC,OAAQ,IACRtI,KAAMA,EACNuI,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAE/C,kBAAC,KAAD,CAAeC,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQC,cAAc,MAAMC,MAAM,WAClC,kBAAC,KAAD,CACEnE,KAAK,WACLiE,QAAQ,gBACRG,OAAO,UACPC,KAAK,UACLC,YApBQ,KAsBV,kBAAC,KAAD,CACEtE,KAAK,WACLiE,QAAQ,SACRG,OAAO,UACPC,KAAK,UACLC,YA3BQ,KA6BV,kBAAC,KAAD,CACEtE,KAAK,WACLiE,QAAQ,aACRG,OAAO,UACPC,KAAK,UACLC,YAlCQ,QC2GHC,GAtHI,WACjB,IAAMC,EAAkB,CACtBnE,QAAS,GACToE,qBAAsB,IACtBjM,WAAY,GACZC,aAAc,EACdrC,sBAAuB,GACvBU,YAAa,EACbC,YAAa,EACbC,wBAAyB,KACzBC,cAAe,GACfE,QAAS,KACTD,uBAAwB,GACxBiB,eAAgB,EAChBD,aAAc,KAdO,EAiBS2B,EAAgB,WAAY2K,GAjBrC,mBAiBhBjE,EAjBgB,KAiBNmE,EAjBM,OAkBW7K,EAAgB,OAAQ2K,GAlBnC,mBAkBhBG,EAlBgB,KAkBLC,EAlBK,OAoBCnE,IAAMzG,SAAS2K,GAAaH,GApB7B,mBAoBhBjO,EApBgB,KAoBVsO,EApBU,KAqBjB1F,EAAiB,SAACyB,GACtB,IAAMC,EAAeD,EAAME,OAAOnG,MAAMjB,QAAQ,KAAM,IACtD,IAAKhE,MAAMD,OAAOoL,IAAgB,CAChC,IAAMiE,EAAO,eACRvO,EADQ,eAEVqK,EAAME,OAAOhB,KAAOrK,OAAOoL,KAE9BgE,EAAQC,GAERF,EAAaE,KAuBX9C,EAAqB,SAAClC,EAAcnF,GACxC,IAAMmK,EAAO,eACRvO,EADQ,eAEVuJ,EAAOrK,OAAOkF,KAEjBkK,EAAQC,GAERF,EAAaE,IAQf,OACE,yBAAKjF,UAAU,OACb,kBAAC,IAAD,CAAMkF,GAAG,qBAAT,oBACA,yBAAKlF,UAAU,aACb,wBAAIA,UAAU,eAAd,iBAEA,wBAAIA,UAAU,UACd,kBAAC,GAAD,CACEU,SAAUA,EACVC,eAjCyB,SAACwE,GAGhCN,EAF0BM,GAG1B,IAAMF,EAAO,eAAQvO,EAAR,GAAiByO,GAC9BH,EAAQC,GACRF,EAAaE,MA6BT,6BACE,kBAAC5D,EAAA,EAAD,CACEC,QAAQ,UACRC,QAnB4B,WACpCwD,EAAaJ,GACbK,EAAQL,IAkBA3E,UAAU,wBACVoF,MAAO,CAAEC,YAAa,SAJxB,iBAQA,8BAEF,8BACE,kBAAC,GAAD,CACE3O,KAAMA,EACN4I,eAAgBA,EAChBgB,mBA5DiB,SAACS,GAC1B,IAAMkE,EAAO,eACRvO,EADQ,eAEVqK,EAAME,OAAOhB,KAAOc,EAAME,OAAOnG,QAEpCkK,EAAQC,GAERF,EAAaE,MAuDP,kBAAC,GAAD,CAAkBvO,KAAMA,EAAM4I,eAAgBA,IAC9C,kBAAC,GAAD,CACE5I,KAAMA,EACN4I,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CAAwBzL,KAAMA,EAAM4I,eAAgBA,IACpD,kBAAC,GAAD,CAAa5I,KAAMA,EAAM4I,eAAgBA,IACzC,kBAAC,GAAD,CACE5I,KAAMA,EACN4I,eAAgBA,EAChB6C,mBAAoBA,IAEtB,kBAAC,GAAD,CAAYzL,KAAMA,IAClB,kBAAC,GAAD,CAAYA,KAAMA,EAAM4I,eAAgBA,IACxC,kBAAC,GAAD,CAAwB5I,KAAMA,QCrJzB4O,GAJE,WACf,OAAO,kBAAC,GAAD,O,oBCgEMjF,GA3DM,SAAC,GAAqC,IAAnC9E,EAAkC,EAAlCA,KAAM+D,EAA4B,EAA5BA,eAC5B,OACE,yBAAK8F,MAAO,CAAEG,UAAW,SACvB,yBAAKvF,UAAU,UAAUoF,MAAO,CAAExB,MAAO,SACvC,wBAAI5D,UAAU,WAAd,kBAEF,mDACA,kBAACwF,GAAA,EAAD,CACE1K,MAAOS,EAAKiF,SAAW,GACvBN,SAAUZ,EACVW,KAAK,UACLE,KAAK,SAEP,gDACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKkK,MAAQ,GACpBvF,SAAUZ,EACVW,KAAK,OACLE,KAAK,SAEP,iDACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKmK,OAAS,GACrBxF,SAAUZ,EACVW,KAAK,QACLE,KAAK,SAEP,+CACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKoK,KAAO,GACnBzF,SAAUZ,EACVW,KAAK,MACLE,KAAK,SAEP,wDACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKc,qBAAuB,GACnC6D,SAAUZ,EACVW,KAAK,sBACLE,KAAK,SAEP,6CACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKqK,WAAa,GACzB1F,SAAUZ,EACVW,KAAK,YACLE,KAAK,SAEP,6DACA,kBAACqF,GAAA,EAAD,CACE1K,MAAOS,EAAKsK,kBAAoB,GAChC3F,SAAUZ,EACVW,KAAK,mBACLE,KAAK,WCvCE2F,GAbK,SAAC,GAAwD,IAAtDhL,EAAqD,EAArDA,MAAOmF,EAA8C,EAA9CA,KAA8C,IAAxCP,gBAAwC,SAAtBQ,EAAsB,EAAtBA,SACpD,OACE,kBAACsF,GAAA,EAAD,CACE1K,MAAOlF,OAAOC,MAAMiF,GAAS,GAAKA,EAClCqF,KAAK,SACLD,SAAUA,EACVD,KAAMA,EAENJ,aAAWH,GAAa5E,MC0CfiL,GAnDM,SAAC,GAAqC,IAAnCxK,EAAkC,EAAlCA,KAAM+D,EAA4B,EAA5BA,eAC5B,OACE,yBAAK8F,MAAO,CAAEG,UAAW,SACvB,6CACA,iDACA,kBAAC,GAAD,CACEzK,MAAOS,EAAKrF,cACZgK,SAAUZ,EACVW,KAAK,gBACLP,UAAU,IAEZ,qDACA,kBAAC,GAAD,CACE5E,MAAOS,EAAK0C,iBACZiC,SAAUZ,EACVW,KAAK,qBAEP,wDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKnF,oBACZ8J,SAAUZ,EACVW,KAAK,wBAEP,wDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKpF,mBACZ+J,SAAUZ,EACVW,KAAK,uBAEP,iEACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKhF,sBACZ2J,SAAUZ,EACVW,KAAK,0BAEP,qDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAK1C,iBACZqH,SAAUZ,EACVW,KAAK,qBAEP,gEACA,kBAAC,GAAD,CACEnF,MAAOS,EAAK5C,WACZuH,SAAUZ,EACVW,KAAK,iBCoFE+F,GA/HI,SAAC,GAAqC,IAAnCzK,EAAkC,EAAlCA,KAAM+D,EAA4B,EAA5BA,eAC1B,OACE,yBAAK8F,MAAO,CAAEG,UAAW,SACvB,2CACA,wBAAIvF,UAAU,WAAd,UACA,2DACA,kBAAC,GAAD,CACElF,MAAOS,EAAKH,YACZ8E,SAAUZ,EACVW,KAAK,cACLP,UAAU,IAEZ,uDACA,kBAAC,GAAD,CACE5E,MAAOS,EAAKF,mBACZ6E,SAAUZ,EACVW,KAAK,uBAGP,wBAAID,UAAU,WAAd,gCACA,8CACA,kBAAC,GAAD,CACElF,MAAOS,EAAKC,qBACZ0E,SAAUZ,EACVW,KAAK,yBAEP,gDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKE,yBACZyE,SAAUZ,EACVW,KAAK,6BAEP,sCACA,kBAAC,GAAD,CACEnF,MAAOS,EAAK0K,eACZ/F,SAAUZ,EACVW,KAAK,mBAEP,0CACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKG,mBACZwE,SAAUZ,EACVW,KAAK,uBAEP,uCACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKI,eACZuE,SAAUZ,EACVW,KAAK,mBAEP,iDACA,kBAACuF,GAAA,EAAD,CACE1K,MACES,EAAKc,oBACD3G,EAAW6F,EAAKc,oBAAsB,IACtC,GAENkD,UAAU,IAEZ,yDACA,kBAAC,GAAD,CACEzE,MAAOS,EAAKK,qBACZsE,SAAUZ,EACVW,KAAK,yBAGP,wBAAID,UAAU,WAAd,mCACA,0CACA,kBAAC,GAAD,CACElF,MAAOS,EAAKtE,YACZiJ,SAAUZ,EACVW,KAAK,gBAGP,0DACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKa,0BACZ8D,SAAUZ,EACVW,KAAK,8BAGP,uDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKpE,wBACZ+I,SAAUZ,EACVW,KAAK,4BAGP,kDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKlE,uBACZ6I,SAAUZ,EACVW,KAAK,2BAGP,wBAAID,UAAU,WAAd,sBACA,uDACA,kBAAC,GAAD,CACElF,MAAOS,EAAKyB,mBACZkD,SAAUZ,EACVW,KAAK,uBAGP,+DACA,kBAAC,GAAD,CACEnF,MAAOS,EAAK2C,0BACZgC,SAAUZ,EACVW,KAAK,8BAGP,yDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKsC,qBACZqC,SAAUZ,EACVW,KAAK,yBAGP,iDACA,kBAAC,GAAD,CACEnF,MAAOS,EAAKgD,cACZ2B,SAAUZ,EACVW,KAAK,oB,UCkCEiG,I,OAhIU,SAAC,GAAqB,IAAnB3K,EAAkB,EAAlBA,KACpB4K,EAAkB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IACxCC,EAAyBD,EAAgBE,KAAI,SAACC,GAClD,IAAM1J,EAAgB0J,EAAO,EAC7B,MAAO,CACLhO,eAAgBgO,EAChBvJ,YAAY,IAAD,OAAMrH,EACfoH,EAAoCvB,EAAMqB,KAE5C2J,cAAc,IAAD,OAAM7Q,EACjBuH,EAAsC1B,EAAMqB,KAE9CJ,kBAAkB,IAAD,OAAM9G,EACrB0H,EAA0C7B,EAAMqB,KAElD4J,gBAAgB,IAAD,OAAM9Q,EACqB,GAAxCoC,EAAgCyD,KAElCoC,cAAc,IAAD,OAAMjI,EACjB6H,EAAsChC,EAAMqB,KAE9C6J,cAAc,GAAD,OAAK/Q,EAChB2H,EAAgC9B,EAAMqB,IAD3B,KAGb6G,cAAc,IAAD,OAAM/N,EACjBsI,EAAgCzC,EAAM+K,KAExC9H,OAAO,IAAD,OAAM9I,EAAWyI,EAAyB5C,EAAM+K,KACtDvI,YAAY,IAAD,OAAMrI,EAAWoI,EAA8BvC,EAAM+K,KAChEI,kBAAkB,IAAD,OAAMhR,EACrB0I,GAAoC7C,EAAM+K,KAE5CK,sBAAsB,GAAD,OAAKjR,EACxBgJ,GAAwCnD,EAAM+K,IAD3B,SAMzB,OACE,yBAAKlB,MAAO,CAAEG,UAAW,SACvB,kDACA,yDAA2BhK,EAAKsC,sBAAwB,EAAxD,WACA,wDAA0BtC,EAAKyB,oBAAsB,EAArD,WACA,gEACEzB,EAAK2C,2BAA6B,EADpC,WAGA,kBAAC0I,GAAA,EAAD,CAAOC,UAAQ,EAAClF,KAAK,KAAKmF,OAAK,GAC7B,+BACE,4BACE,6BACCX,EAAgBE,KAAI,SAACC,GACpB,OAAO,2CAAaA,SAI1B,+BACE,4BACE,mDACCF,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQhK,iBAGxB,wBAAIiD,UAAU,WACZ,qDACCoG,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQR,mBAGxB,wBAAIvG,UAAU,WACZ,wBAAIoF,MAAO,CAAE4B,YAAa,SAA1B,sBACCZ,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQvK,uBAGxB,wBAAIwD,UAAU,WACZ,wBAAIoF,MAAO,CAAE4B,YAAa,SAA1B,oBACCZ,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQP,qBAGxB,4BACE,qDACCJ,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQpJ,mBAGxB,wBAAIqC,UAAU,WACZ,gDACCoG,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQN,mBAGxB,4BACE,8CACCL,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQtD,mBAGxB,wBAAIzD,UAAU,WACZ,sCACCoG,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQvI,YAGxB,4BACE,4CACC4H,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQhJ,iBAGxB,wBAAIiC,UAAU,WACZ,oDACCoG,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQL,uBAGxB,4BACE,uDACCN,EAAuBC,KAAI,SAACU,GAC3B,OAAO,4BAAKA,EAAQJ,gC,kDC4LnBM,GApTA,SAAC,GAAqB,IA6JJC,EA7Jf3L,EAAkB,EAAlBA,KAAkB,EACwBA,EAAlDiF,eAD0B,MAChB,GADgB,IACwBjF,EAApCkK,YADY,MACL,GADK,IACwBlK,EAAzBmK,aADC,MACO,GADP,IACwBnK,EAAboK,WADX,MACiB,GADjB,EAE5BwB,EAAiB3G,GAAWiF,GAAQC,GAASC,EAFjB,EAGZxL,mBAAS,YAHG,mBAG3BF,EAH2B,KAGtBmN,EAHsB,KAI5BC,EAAU,CACd,CACEpN,IAAK,yBACLa,MAAM,IAAD,OAAMpF,EAAW6F,EAAKnF,uBAE7B,CACE6D,IAAK,oBACLa,MAAM,IAAD,OAAMpF,EAAW6F,EAAKpF,sBAE7B,CACE8D,IAAK,qBACLa,MAAM,IAAD,OAAMpF,EAAWO,EAA0BsF,MAElD,CACEtB,IAAK,qBACLa,MAAM,IAAD,OAAMS,EAAK0C,mBAElB,CACEhE,IAAK,eACLa,MAAM,IAAD,OAAMpF,EAAWc,EAAqB+E,MAE7C,CACEtB,IAAK,cACLa,MAAM,IAAD,OAAMpF,EAAWY,EAAciF,MAEtC,CACEtB,IAAK,iBACLa,MAAM,GAAD,OAAKS,EAAK5C,WAAV,WAEP,CACEsB,IAAK,qBACLa,MAAM,GAAD,OAAKS,EAAK1C,iBAAV,MAEP,CACEoB,IAAI,cACJa,MAAM,IAAD,OAAMpF,EAAWoC,EAAgCyD,MAExD,CACEtB,IAAI,oBACJa,MAAM,IAAD,OAAMpF,EAAWe,EAAqB8E,OAIzC+L,EAAuB,SAAC3R,GAC5B,OAAOC,QAAQD,GAAU,GAAG4R,QAAQ,KAEhCC,EAAuB,SAACtI,EAAepE,GAC3C,MAAM,GAAN,OAAUoE,EAAV,cAAqBoI,EAAqBxM,KA2CtC2M,EAAmB,CACvB,CACExN,IAAK,uBACLa,MAAM,IAAD,OAAMpF,EAAWyF,EAA4BI,MAEpD,CACEtB,IAAK,oBACLa,MAAM,IAAD,OAAMpF,EAAWyF,EAA4BI,GAAQ,KAE5D,CACEtB,IAAK,mBACLa,MAAM,IAAD,OAAMpF,EAAWoC,EAAgCyD,MAExD,CACEtB,IAAK,kCACLa,MAAM,IAAD,OAAMpF,EACTyF,EAA4BI,GAAQ,EAClCzD,EAAgCyD,OA8BlCmM,EAAwB,SAACD,GAC7B,OAAOA,EAAiBpB,KAAI,SAACsB,GAAD,OAC1B,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKE,GAAI,GAAIJ,EAAE1N,KACf,kBAAC4N,GAAA,EAAD,CAAKE,GAAI,EAAG/H,UAAU,+BACnB2H,EAAE7M,cA4BTkN,EAA6B,CACjC,CACE/N,IAAK,4BACLa,MAAM,IAAD,OAAMpF,EAAW4F,EAAsCC,MAE9D,CACEtB,IAAK,qBACLa,MAAM,IAAD,OAAMpF,EAAWoC,EAAgCyD,OAIpD0M,EAA4B,CAChC,CACEhO,IAAK,iBACLa,MAAM,IAAD,OAAMpF,EAAWyF,EAA4BI,OAItD,OACE,yBAAK6J,MAAO,CAAEG,UAAW,SACvB,4BAAK4B,GAAc,UAAO3G,EAAP,YAAkBiF,EAAlB,YAA0BC,EAA1B,aAAoCC,IACvD,kBAACuC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CAAK5H,UAAU,QACb,kBAAC6H,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,kBAGA,kBAACF,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG/H,UAAU,oBAC5B,0BAAMA,UAAU,qBAAhB,WACOtK,EAAW6F,EAAKrF,iBAEvB,0BAAM8J,UAAU,gCAAhB,WACOtK,EAAW6F,EAAKrF,oBAK7B,kBAAC2R,GAAA,EAAD,CAAKC,GAAI,IA1DcZ,EA2DE,CACrB,CACEjN,IAAK,iBACLa,MAAM,IAAD,OAAMpF,EAAWyF,EAA4BI,MAEpD,CACEtB,IAAK,mBACLa,MAAM,IAAD,OAAMpF,EAAW4G,EAA8Bf,MAGtD,CACEtB,IAAK,mBACLa,MAAM,IAAD,OAAMpF,EACT6H,EAAsChC,GAAQ,MAGlD,CACEtB,IAAK,gBACLa,MAAM,GAAD,OAAKpF,EAAWsJ,GAAqBzD,IAArC,MAEP,CACEtB,IAAK,uBACLa,MAAM,IAAD,OAAMpF,EAAWoJ,GAA4BvD,MAEpD,CACEtB,IAAK,oBACLa,MAAM,IAAD,OAAMpF,EAAWe,EAAqB8E,MAE7C,CACEtB,IAAK,mBACLa,MAAM,GAAD,OAAKpF,EAAW2H,EAAgC9B,IAAhD,MAEP,CACEtB,IAAK,oBACLa,MAAM,GAAD,OAAKpF,EAAWqJ,GAAyBxD,IAAzC,OA3Ff,kBAACqM,GAAA,EAAD,KACGV,EAAMb,KAAI,SAACsB,GAAD,OACT,kBAACE,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,GAAA,EAAD,CAAK5H,UAAU,WACb,kBAAC6H,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACdJ,EAAE1N,KAEL,kBAAC4N,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG/H,UAAU,qBAC5B,0BAAMA,UAAU,qBAAqB2H,EAAE7M,OACvC,0BAAMkF,UAAU,gCAAgC2H,EAAE7M,iBAuF1D,kBAAC8M,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GA9HY,SAACZ,GAC5B,OAAOA,EAAMb,KAAI,SAACsB,GAAD,OACf,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKE,GAAI,GAAIJ,EAAE1N,KACf,kBAAC4N,GAAA,EAAD,CAAKE,GAAI,EAAG/H,UAAU,+BACnB2H,EAAE7M,WAyHUqN,CAAqBd,IAClC,kBAACQ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACM,GAAA,EAAD,CACEC,GAAG,aACHC,UAAWrO,EACXsO,SAAU,SAACC,GAAD,OAAepB,EAAOoB,IAChClH,QAAQ,QACRtB,UAAU,+BAEV,kBAACyI,GAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,YAC5BjB,EAAsBM,GACvB,yBAAKhI,UAAU,0BACb,kBAAC,KAAD,CAEE6D,OAAQ,QACR+E,UAAU,WACVC,OAAQ,8CACRtN,KA1NT,CACL,CAAC,UAAW,QACZ,CACEiM,EAAqB,WAAY1P,EAAgCyD,IACjE+L,EAAqBxP,EAAgCyD,KAEvD,CACEiM,EAAqB,UAAW3L,EAA4BN,IAC5D+L,EAAqBzL,EAA4BN,KAEnD,CACEiM,EACE,aACAtL,EAA+BX,IAEjC+L,EAAqBpL,EAA+BX,KAEtD,CACEiM,EAAqB,UAAW1L,EAA4BP,IAC5D+L,EAAqBxL,EAA4BP,KAEnD,CACEiM,EACE,QACAzL,EAAwCR,IAE1C+L,EAAqBvL,EAAwCR,KAE/D,CACEiM,EAAqB,YAAaxL,EAA8BT,IAChE+L,EAAqBtL,EAA8BT,KAErD,CACEiM,EAAqB,MAAOvL,EAAwBV,IACpD+L,EAAqBrL,EAAwBV,MAyLjCuN,QAAS,GACTC,UAAW,CAAE,gBAAiB,SAIpC,kBAACN,GAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,UAC3B,yBAAK3I,UAAU,QACZ0H,EAAsBO,GACvB,yBAAKjI,UAAU,0BACb,kBAAC,KAAD,CAEE6D,OAAQ,QACR+E,UAAU,WACVC,OAAQ,8CACRtN,KA3KX,CACL,CAAC,SAAU,SACX,CACEiM,EAAqB,OAAQjM,EAAKH,aAClCkM,EAAqB/L,EAAKH,cAE5B,CACEoM,EAAqB,QAASjM,EAAKF,oBACnCiM,EAAqB/L,EAAKF,sBAoKZyN,QAAS,GACTC,UAAW,CAAE,eAAgB,UAKrC,kBAACN,GAAA,EAAD,CAAKC,SAAS,gBAAgBC,MAAM,aAClC,yBAAK3I,UAAU,QACZ0H,EAAsBD,WC3O1BuB,GA9BS,WAAO,IAAD,EACMhP,EAAgB,YAAa,IADnC,mBACrBiP,EADqB,KACVC,EADU,OAEJ/O,mBAAS8O,GAFL,mBAErB1N,EAFqB,KAEf4N,EAFe,KAItB7J,EAAiB,SAACyB,GACtB,IAAMjG,EAAQiG,EAAME,OAAOnG,MACrBmK,EAAO,eACR1J,EADQ,eAEVwF,EAAME,OAAOhB,KACU,SAAtBc,EAAME,OAAOd,MAA6B,KAAVrF,EAAeA,EAAQlF,OAAOkF,KAGlEqO,EAAQlE,GACRiE,EAAajE,IAGf,OACE,kBAACiD,GAAA,EAAD,KACE,wBAAIlI,UAAU,eAAd,uBACA,kBAAC,GAAD,CAAczE,KAAMA,EAAM+D,eAAgBA,IAC1C,kBAAC,GAAD,CAAc/D,KAAMA,EAAM+D,eAAgBA,IAC1C,kBAAC,GAAD,CAAY/D,KAAMA,EAAM+D,eAAgBA,IACxC,kBAAC,GAAD,CAAQ/D,KAAMA,IACd,kBAAC,GAAD,CAAkBA,KAAMA,IAExB,yBAAK6J,MAAO,CAAEgE,UAAW,eAAiB7O,KAAKW,UAAUK,MCzFhD,SAAS8N,KACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWlE,KAC/C,kBAAC,IAAD,CAAOiE,KAAK,oBAAoBC,UAAWR,MCDjDS,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SzB+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1P,GACLC,QAAQD,MAAMA,EAAM2P,c","file":"static/js/main.d38a8e17.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FormData } from \"./Calculator\";\r\nimport { useState } from \"react\";\r\nimport { Data } from \"./pages/BrrrrCalculator\";\r\n\r\nexport const toCurrency = (number: number): string => {\r\n  if (Number.isNaN(number)) {\r\n    return \"\";\r\n  }\r\n  const formattedValue = number.toLocaleString(undefined, {\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  return formattedValue;\r\n};\r\n\r\nexport const calculateTotalProjectCost = ({\r\n  purchasePrice = 0,\r\n  estimateRepairCost = 0,\r\n  purchaseClosingCost = 0,\r\n  preRentHoldingCost = 0,\r\n}: FormData | Data): number => {\r\n  const totalProjectCost =\r\n    (purchasePrice || 0) +\r\n    (estimateRepairCost || 0) +\r\n    (purchaseClosingCost || 0) +\r\n    (preRentHoldingCost || 0);\r\n  return totalProjectCost;\r\n};\r\n\r\nexport const calculateLoan = ({\r\n  downPaymentPercentage = 0,\r\n  purchasePrice = 0,\r\n}: FormData | Data): number => {\r\n  const loan = (purchasePrice * (100 - downPaymentPercentage)) / 100;\r\n\r\n  return loan;\r\n};\r\n\r\nexport const calculateDownPayment = ({\r\n  downPaymentPercentage = 0,\r\n  purchasePrice = 0,\r\n}: FormData | Data) => {\r\n  const downPayment = (purchasePrice * downPaymentPercentage) / 100;\r\n\r\n  return downPayment;\r\n};\r\n\r\nexport const calculateOutOfPocket = (form: FormData | Data): number => {\r\n  const totalProjectCost = calculateTotalProjectCost(form);\r\n  const loan = calculateLoan(form);\r\n  const outOfPocket = totalProjectCost - loan;\r\n\r\n  return outOfPocket;\r\n};\r\n\r\nexport const calculateValueByPercentage = (totalValue = 0, percentage = 0) => {\r\n  const percentageValue = (percentage / 100) * totalValue;\r\n\r\n  return percentageValue;\r\n};\r\n\r\nexport const calculateTotalExpenses = (form: FormData) => {\r\n  const {\r\n    rent,\r\n    vacancyRate,\r\n    repairsRate,\r\n    capitalExpendituresRate,\r\n    insuranceRate,\r\n    propertyManagementRate,\r\n    purchasePrice,\r\n    taxRate,\r\n    floodInsuranceMonthlyCost,\r\n    electricityMonthlyCost,\r\n    waterMonthlyCost,\r\n    sewerMonthlyCost,\r\n    gasMonthlyCost,\r\n    garbageMonthlyCost,\r\n    hoaMonthlyCost,\r\n  } = form;\r\n  const mortgage = calculateMonthlyMortgagePayment(form);\r\n  const vacancyCost = calculateValueByPercentage(rent, vacancyRate);\r\n  const repairsCost = calculateValueByPercentage(rent, repairsRate);\r\n  const capitalExpendituresCost = calculateValueByPercentage(\r\n    rent,\r\n    capitalExpendituresRate\r\n  );\r\n  const insuranceCost = calculateValueByPercentage(\r\n    purchasePrice / 12,\r\n    insuranceRate\r\n  );\r\n  const taxCost = calculateValueByPercentage(purchasePrice / 12, taxRate);\r\n  const propertyManagementMonthlyCost = calculateValueByPercentage(\r\n    rent,\r\n    propertyManagementRate\r\n  );\r\n\r\n  const totalExpenses =\r\n    mortgage +\r\n    vacancyCost +\r\n    repairsCost +\r\n    capitalExpendituresCost +\r\n    insuranceCost +\r\n    taxCost +\r\n    (floodInsuranceMonthlyCost || 0) +\r\n    (electricityMonthlyCost || 0) +\r\n    (waterMonthlyCost || 0) +\r\n    (sewerMonthlyCost || 0) +\r\n    (gasMonthlyCost || 0) +\r\n    (garbageMonthlyCost || 0) +\r\n    (hoaMonthlyCost || 0) +\r\n    propertyManagementMonthlyCost;\r\n\r\n  return totalExpenses;\r\n};\r\n\r\nexport const calculateMonthlyCashFlow = (form: FormData) => {\r\n  const cashflow = form.rent - calculateTotalExpenses(form);\r\n\r\n  return cashflow;\r\n};\r\n\r\nexport const calculateROIWithoutMortgage = (form: FormData) => {\r\n  const totalExpensesWithoutMortgage =\r\n    calculateTotalExpenses(form) - calculateMonthlyMortgagePayment(form);\r\n\r\n  const ROIWithoutMortgage =\r\n    (((form.rent - totalExpensesWithoutMortgage) * 12) /\r\n      calculateOutOfPocket(form)) *\r\n    100;\r\n\r\n  return ROIWithoutMortgage;\r\n};\r\n\r\nexport const calculateROI = (form: FormData) => {\r\n  const cashflow = calculateMonthlyCashFlow(form);\r\n  const ROI = ((cashflow * 12) / calculateOutOfPocket(form)) * 100;\r\n\r\n  return ROI;\r\n};\r\n\r\nexport const calculateProjectionSalePrice = ({\r\n  afterRepairValue,\r\n  appreciation,\r\n  projectionYear,\r\n}: FormData) => {\r\n  // calculate compound interest\r\n  // A = P(1 + r/n)^(nt) where P = principal, r = rate, n = compound (1 if annualy) and t = time (in years)\r\n  const salePrice =\r\n    afterRepairValue * Math.pow(1 + appreciation / 100, projectionYear);\r\n\r\n  return salePrice;\r\n};\r\n\r\nexport const calculateProjectionSaleExpenses = ({\r\n  afterRepairValue,\r\n}: FormData) => {\r\n  // 6% agent cost, $4000 closing costs, $5000 new paint cost\r\n  const saleExpenses = afterRepairValue * 0.06 + 4000 + 5000;\r\n\r\n  return saleExpenses;\r\n};\r\n\r\nexport const calculateProjectionLoanPayoff = (form: FormData) => {\r\n  const { projectionYear, loanPeriod, loanInterestRate: interestRate } = form;\r\n  const loan = calculateLoan(form);\r\n\r\n  var loanPayoff = getRemainingBalance(\r\n    loan,\r\n    projectionYear * 12,\r\n    loanPeriod * 12,\r\n    interestRate / 100\r\n  );\r\n\r\n  return loanPayoff;\r\n};\r\n\r\nconst getRemainingBalance = (\r\n  originalBalance: number,\r\n  numOfPayments: number,\r\n  totalNumberOfPayments: number,\r\n  rate: number\r\n) => {\r\n  // https://www.mtgprofessor.com/formulas.htm\r\n  const monthlyRate = rate / 12; // monthly\r\n\r\n  const remainingBalance =\r\n    (originalBalance *\r\n      (Math.pow(1 + monthlyRate, totalNumberOfPayments) -\r\n        Math.pow(1 + monthlyRate, numOfPayments))) /\r\n    (Math.pow(1 + monthlyRate, totalNumberOfPayments) - 1);\r\n\r\n  return remainingBalance;\r\n};\r\n\r\nexport const calculateProjectionTotalInvestedCapital = (form: FormData) => {\r\n  const totalInvestedCapital = calculateOutOfPocket(form);\r\n\r\n  return totalInvestedCapital;\r\n};\r\n\r\nexport const calculateProjectionSaleProfit = (form: FormData) => {\r\n  const salePrice = calculateProjectionSalePrice(form);\r\n  const saleExpenses = calculateProjectionSaleExpenses(form);\r\n  const loanPayoff = calculateProjectionLoanPayoff(form);\r\n  const totalInvestedCapital = calculateOutOfPocket(form);\r\n\r\n  const saleProfit =\r\n    salePrice - saleExpenses - loanPayoff - totalInvestedCapital;\r\n\r\n  return saleProfit;\r\n};\r\n\r\nexport const calculateProjectionTotalCashflow = (form: FormData) => {\r\n  const projectionYear = form.projectionYear;\r\n  const cashflow = calculateMonthlyCashFlow(form);\r\n  const projectionTotalCashflow = cashflow * 12 * projectionYear;\r\n\r\n  return projectionTotalCashflow;\r\n};\r\n\r\nexport const calculateProjectionTotalProfit = (form: FormData) => {\r\n  const projectionTotalCashflow = calculateProjectionTotalCashflow(form);\r\n  const saleProfit = calculateProjectionSaleProfit(form);\r\n\r\n  const totalProfit = saleProfit + projectionTotalCashflow;\r\n\r\n  return totalProfit;\r\n};\r\nexport const calculateProjectionROI = (form: FormData) => {\r\n  const totalProfit = calculateProjectionTotalProfit(form);\r\n  const totalInvestedCapital = calculateOutOfPocket(form);\r\n  const year = form.projectionYear;\r\n\r\n  const projectedROI = (totalProfit / totalInvestedCapital / year) * 100;\r\n  return projectedROI;\r\n};\r\n\r\nexport const getNumbersOnly = (text: string) => {\r\n  return text.replace(/\\D/g, \"\");\r\n};\r\n\r\nexport const calculateMonthlyMortgagePayment = (form: FormData | Data) => {\r\n  const { loanPeriod = 1, loanInterestRate = 0 } = form;\r\n  const loan = calculateLoan(form);\r\n\r\n  // allow calculation for 0% interest rate\r\n  if (!loanInterestRate) {\r\n    return loan / (loanPeriod * 12);\r\n  }\r\n\r\n  // https://www.thebalance.com/calculate-mortgage-315668\r\n  // P = A/D where D = {[(1 + i) ^n] - 1} / [i(1 + i)^n]\r\n  const n = loanPeriod * 12; // 12 months\r\n  const i = loanInterestRate / 100 / 12; // 12 months\r\n  const D = (Math.pow(1 + i, n) - 1) / (i * Math.pow(1 + i, n));\r\n  const monthlyMortgagePayment = loan / D;\r\n\r\n  return monthlyMortgagePayment;\r\n};\r\n\r\nexport const useLocalStorage = (key: string, initialValue: any) => {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: any) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport const calculateMonthlyTotalIncome = ({\r\n  monthlyRent = 0,\r\n  otherMonthlyIncome = 0,\r\n}: Data) => {\r\n  return monthlyRent + otherMonthlyIncome;\r\n};\r\n\r\nexport const calculateTotalMonthyOperatingExpenses = (data: Data): number => {\r\n  const {\r\n    monthlyElectricyCost = 0,\r\n    monthlyWaterAndSewerCost = 0,\r\n    monthlyGarbageCost = 0,\r\n    monthlyHoaCost = 0,\r\n    otherMontnlyExpenses = 0,\r\n  } = data;\r\n\r\n  const totalExpenses =\r\n    calculateMonthlyVacancyCost(data) +\r\n    calculateMonthlyRepairsCost(data) +\r\n    calculateMonthlyCapitalExpendituresCost(data) +\r\n    calculateMonthlyInsuranceCost(data) +\r\n    calculateMonthlyTaxCost(data) +\r\n    calculateMonthlyManagementCost(data) +\r\n    (monthlyElectricyCost || 0) +\r\n    (monthlyWaterAndSewerCost || 0) +\r\n    (monthlyGarbageCost || 0) +\r\n    (monthlyHoaCost || 0) +\r\n    (otherMontnlyExpenses || 0);\r\n\r\n  // console.log(\"Starting:\");\r\n  // console.log(calculateMonthlyVacancyCost(data));\r\n  // console.log(calculateMonthlyRepairsCost(data));\r\n  // console.log(calculateMonthlyCapitalExpendituresCost(data));\r\n  // console.log(calculateMonthlyInsuranceCost(data));\r\n  // console.log(calculateMonthlyTaxCost(data));\r\n  // console.log(calculateMonthlyManagementCost(data));\r\n  // console.log(monthlyElectricyCost);\r\n  // console.log(monthlyWaterAndSewerCost);\r\n  // console.log(monthlyGarbageCost);\r\n  // console.log(monthlyHoaCost);\r\n  // console.log(totalExpenses);\r\n  // console.log(\"Ending:\");\r\n\r\n  return totalExpenses;\r\n};\r\n\r\nexport const calculateMonthlyVacancyCost = (data: Data) => {\r\n  const totalMonthlyIncome = calculateMonthlyTotalIncome(data);\r\n\r\n  return calculateValueByPercentage(totalMonthlyIncome, data.vacancyRate);\r\n};\r\n\r\nexport const calculateMonthlyManagementCost = (data: Data) => {\r\n  return calculateValueByPercentage(\r\n    data.monthlyRent,\r\n    data.propertyManagementRate\r\n  );\r\n};\r\nexport const calculateMonthlyCapitalExpendituresCost = (data: Data) => {\r\n  const totalMonthlyIncome = calculateMonthlyTotalIncome(data);\r\n\r\n  return calculateValueByPercentage(\r\n    totalMonthlyIncome,\r\n    data.capitalExpendituresRate\r\n  );\r\n};\r\nexport const calculateMonthlyRepairsCost = (data: Data) => {\r\n  const totalMonthlyIncome = calculateMonthlyTotalIncome(data);\r\n\r\n  return calculateValueByPercentage(\r\n    totalMonthlyIncome,\r\n    data.repairsAndMaintenanceRate\r\n  );\r\n};\r\nexport const calculateMonthlyInsuranceCost = (data: Data) => {\r\n  const totalMonthlyIncome = calculateMonthlyTotalIncome(data);\r\n\r\n  return calculateValueByPercentage(totalMonthlyIncome, data.insuranceRate);\r\n};\r\nexport const calculateMonthlyTaxCost = (data: Data) => {\r\n  return data.annualPropertyTaxes / 12;\r\n};\r\n// Unused\r\nexport const calculateMonthlyTotalExpenses = (data: Data): number => {\r\n  const mortgage = calculateMonthlyMortgagePayment(data);\r\n  const operatingExpenses = calculateTotalMonthyOperatingExpenses(data);\r\n\r\n  const totalExpenses = Number(mortgage) + Number(operatingExpenses);\r\n\r\n  return totalExpenses;\r\n};\r\n\r\nexport const caculateProjectedNumber = (\r\n  initialNumber = 0,\r\n  growthRate = 0,\r\n  projectedYear = 0\r\n) => {\r\n  const finalAmount =\r\n    initialNumber * Math.pow(1 + growthRate / 100, projectedYear);\r\n\r\n  return finalAmount;\r\n};\r\n\r\nexport const calculateProjectedTotalAnnualIncome = (\r\n  data: Data,\r\n  projectionYear = 0\r\n): number => {\r\n  const totalIncome = calculateMonthlyTotalIncome(data) * 12;\r\n\r\n  return caculateProjectedNumber(\r\n    totalIncome,\r\n    data.annualIncomeGrowth,\r\n    projectionYear\r\n  );\r\n};\r\n\r\nexport const calculateProjectedTotalAnnualExpenses = (\r\n  data: Data,\r\n  projectionYear = 0\r\n): number => {\r\n  const annualMortgage = calculateMonthlyMortgagePayment(data) * 12;\r\n  const projectedOperatingExpenses = calculateProjectedAnnualOperatingExpenses(\r\n    data,\r\n    projectionYear\r\n  );\r\n  // console.log(annualMortgage);\r\n  // console.log(projectedOperatingExpenses);\r\n  return annualMortgage + projectedOperatingExpenses;\r\n};\r\n\r\nexport const calculateProjectedCashOnCashROI = (\r\n  data: Data,\r\n  projectionYear = 0\r\n): number => {\r\n  const annualCashflow = calculateProjectedTotalAnnualCashflow(\r\n    data,\r\n    projectionYear\r\n  );\r\n  const outOfPocket = calculateOutOfPocket(data);\r\n\r\n  // console.log(annualCashflow);\r\n  // console.log(outOfPocket);\r\n  const ROI = (annualCashflow / outOfPocket) * 100;\r\n\r\n  return ROI;\r\n};\r\n\r\nexport const calculateProjectedTotalAnnualCashflow = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  return (\r\n    calculateProjectedTotalAnnualIncome(data, projectionYear) -\r\n    calculateProjectedTotalAnnualExpenses(data, projectionYear)\r\n  );\r\n};\r\n\r\nexport const calculateProjectedTotalCashflow = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  let totalCashflow = 0;\r\n  for (let i = 0; i < projectionYear; i++) {\r\n    totalCashflow +=\r\n      calculateProjectedTotalAnnualIncome(data, i) -\r\n      calculateProjectedTotalAnnualExpenses(data, i);\r\n  }\r\n  return totalCashflow;\r\n};\r\n\r\nexport const calculateProjectedAnnualOperatingExpenses = (\r\n  data: Data,\r\n  projectionYear = 0\r\n): number => {\r\n  const annualOperatingExpenses =\r\n    calculateTotalMonthyOperatingExpenses(data) * 12;\r\n  // console.log(calculateTotalMonthyOperatingExpenses(data));\r\n\r\n  return caculateProjectedNumber(\r\n    annualOperatingExpenses,\r\n    data.annualExpensesGrowth,\r\n    projectionYear\r\n  );\r\n};\r\n\r\nexport const calculateProjectedLoanBalance = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  const { loanPeriod, loanInterestRate: interestRate } = data;\r\n  const loan = calculateLoan(data);\r\n\r\n  var loanBalance = getRemainingBalance(\r\n    loan,\r\n    projectionYear * 12,\r\n    loanPeriod * 12,\r\n    interestRate / 100\r\n  );\r\n\r\n  return loanBalance;\r\n};\r\n\r\nexport const calculateProjectedPropertyValue = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  return caculateProjectedNumber(\r\n    data.afterRepairPrice || data.purchasePrice,\r\n    data.annualPropertyValueGrowth,\r\n    projectionYear\r\n  );\r\n};\r\n\r\nexport const calculateProjectedEquity = (data: Data, projectionYear = 0) => {\r\n  return (\r\n    calculateProjectedPropertyValue(data, projectionYear) -\r\n    calculateProjectedLoanBalance(data, projectionYear)\r\n  );\r\n};\r\n\r\nexport const calculateProjectedTotalProfitIfSold = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  // const projectedTotalCashflow = calculateProjectedTotalAnnualCashflow(form);\r\n  const projectedPropertyValue = calculateProjectedPropertyValue(\r\n    data,\r\n    projectionYear\r\n  );\r\n  const saleCommission = calculateValueByPercentage(\r\n    projectedPropertyValue,\r\n    data.salesExpenses\r\n  );\r\n  const equity = calculateProjectedEquity(data, projectionYear);\r\n\r\n  const outOfPocket = calculateOutOfPocket(data);\r\n  const totalCashflow = calculateProjectedTotalCashflow(data, projectionYear);\r\n\r\n  const totalProfit = equity - saleCommission - outOfPocket + totalCashflow;\r\n\r\n  return totalProfit;\r\n};\r\n\r\nexport const calculateProjectedAnnualizedTotalReturn = (\r\n  data: Data,\r\n  projectionYear = 0\r\n) => {\r\n  const projectedProfit = calculateProjectedTotalProfitIfSold(\r\n    data,\r\n    projectionYear\r\n  );\r\n  const outOfPocket = calculateOutOfPocket(data);\r\n\r\n  const totalInvestmentReturn = projectedProfit / outOfPocket;\r\n\r\n  const annualizedReturn =\r\n    (Math.pow(1 + totalInvestmentReturn, 1 / projectionYear) - 1) * 100;\r\n\r\n  // console.log(projectedProfit);\r\n  // console.log(outOfPocket);\r\n  // console.log(totalInvestmentReturn);\r\n  // console.log(annualizedReturn);\r\n  return annualizedReturn;\r\n};\r\n\r\nexport const calculateNetOperatingIncome = (data: Data) => {\r\n  return (\r\n    calculateProjectedTotalAnnualIncome(data) -\r\n    calculateProjectedAnnualOperatingExpenses(data)\r\n  );\r\n};\r\n\r\nexport const calculatePurchaseCapRate = (data: Data) => {\r\n  return (calculateNetOperatingIncome(data) / data.purchasePrice) * 100;\r\n};\r\n\r\nexport const calculateProFormaCap = (data: Data) => {\r\n  return (calculateNetOperatingIncome(data) / data.afterRepairPrice) * 100;\r\n};\r\n","import React from \"react\";\r\nimport { toCurrency } from \"./helpers\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  inputName?: string;\r\n  inputValue: number;\r\n  additionalInfoText?: string;\r\n  disabled?: boolean;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  required?: boolean;\r\n  roundValue?: boolean;\r\n  isNumberInput?: boolean;\r\n  handleOnChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SingleInput = ({\r\n  label,\r\n  inputName,\r\n  inputValue,\r\n  additionalInfoText,\r\n  handleOnChange,\r\n  disabled,\r\n  prefix,\r\n  suffix,\r\n  required,\r\n  roundValue = true,\r\n  isNumberInput,\r\n}: Props) => {\r\n  let isInvalid = \"\";\r\n  if (required && !inputValue) {\r\n    isInvalid = \"is-invalid\";\r\n  }\r\n\r\n  let value = roundValue ? Math.ceil(inputValue) : inputValue;\r\n\r\n  const strValue = value ? toCurrency(Number(value)) : \"\";\r\n\r\n  return (\r\n    <div className=\"input-group row py-1 \">\r\n      <label className=\"col-md-2\">{label}</label>\r\n      <div className=\"col-md-4\">\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">{prefix}</span>\r\n          </div>\r\n          <input\r\n            className={\"form-control \" + isInvalid}\r\n            name={inputName}\r\n            value={strValue}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            type={isNumberInput ? \"number\" : \"\"}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">{suffix}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-2\">{additionalInfoText}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleInput;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport { calculateTotalProjectCost, toCurrency } from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst TotalProjectCost = ({ form, handleOnChange }: Props) => {\r\n  const {\r\n    purchasePrice,\r\n    purchaseClosingCost,\r\n    preRentHoldingCost,\r\n    estimateRepairCost,\r\n  } = form;\r\n  return (\r\n    <div>\r\n      <h2>\r\n        1) Total Project Cost: ${toCurrency(calculateTotalProjectCost(form))}\r\n      </h2>\r\n      <SingleInput\r\n        label=\"Purchase Price\"\r\n        inputValue={purchasePrice}\r\n        inputName=\"purchasePrice\"\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n        required={true}\r\n      />\r\n      <SingleInput\r\n        label=\"Purchase Closing Cost\"\r\n        inputValue={purchaseClosingCost}\r\n        inputName=\"purchaseClosingCost\"\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Pre-Rent Holding Cost\"\r\n        inputValue={preRentHoldingCost}\r\n        inputName=\"preRentHoldingCost\"\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Estimated Repairs\"\r\n        inputValue={estimateRepairCost}\r\n        inputName=\"estimateRepairCost\"\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Total Project Cost\"\r\n        inputValue={calculateTotalProjectCost(form)}\r\n        prefix={\"$\"}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalProjectCost;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleTextOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst PropertyInfo = ({ form, handleOnChange, handleTextOnChange }: Props) => {\r\n  const { askingPrice } = form;\r\n  return (\r\n    <div>\r\n      <div className=\"input-group row py-1\">\r\n        <label className=\"col-md-2\">Address</label>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              className={\"form-control\"}\r\n              name={\"address\"}\r\n              value={form.address}\r\n              onChange={handleTextOnChange}\r\n              type={\"text\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SingleInput\r\n        label=\"Asking Price\"\r\n        inputName=\"askingPrice\"\r\n        inputValue={askingPrice}\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyInfo;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  defaults: FormData;\r\n  handleOnSubmit: (defaults: FormData) => void;\r\n}\r\n\r\nconst DefaultValues = ({ defaults, handleOnSubmit }: Props) => {\r\n  const [localDefaults, setLocalDefaults] = React.useState({ ...defaults });\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const trimmedValue = event.target.value.replace(/,/g, \"\");\r\n    if (!isNaN(Number(trimmedValue))) {\r\n      setLocalDefaults({\r\n        ...localDefaults,\r\n        [event.target.name]: Number(trimmedValue),\r\n      });\r\n    }\r\n  };\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n\r\n  const handleOnSumbit = () => {\r\n    handleOnSubmit(localDefaults);\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const {\r\n    purchaseClosingCost,\r\n    loanPeriod,\r\n    loanInterestRate,\r\n    downPaymentPercentage,\r\n    vacancyRate,\r\n    repairsRate,\r\n    capitalExpendituresRate,\r\n    insuranceRate,\r\n    taxRate,\r\n    propertyManagementRate,\r\n    projectionYear,\r\n    appreciation,\r\n  } = localDefaults;\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow} className=\"float-right\">\r\n        Edit Defaults\r\n      </Button>\r\n      <Modal show={showModal} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Defaults</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form>\r\n            <div>\r\n              <SingleInput\r\n                label=\"Purchase Closing Costs\"\r\n                inputName=\"purchaseClosingCost\"\r\n                inputValue={purchaseClosingCost}\r\n                handleOnChange={handleOnChange}\r\n                prefix={\"$\"}\r\n              />\r\n              <SingleInput\r\n                label=\"Loan Period\"\r\n                inputName=\"loanPeriod\"\r\n                inputValue={loanPeriod}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"years\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Interest Rate\"\r\n                inputName=\"loanInterestRate\"\r\n                inputValue={loanInterestRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Down Payment Percentage\"\r\n                inputName=\"downPaymentPercentage\"\r\n                inputValue={downPaymentPercentage}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Vacancy Rate\"\r\n                inputName=\"vacancyRate\"\r\n                inputValue={vacancyRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Repair Percentage\"\r\n                inputName=\"repairsRate\"\r\n                inputValue={repairsRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Capital Expenditure Percentage\"\r\n                inputName=\"capitalExpendituresRate\"\r\n                inputValue={capitalExpendituresRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Insurance Rate\"\r\n                inputName=\"insuranceRate\"\r\n                inputValue={insuranceRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Tax Rate\"\r\n                inputName=\"taxRate\"\r\n                inputValue={taxRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Property Management Rate\"\r\n                inputName=\"propertyManagementRate\"\r\n                inputValue={propertyManagementRate}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Projection Year\"\r\n                inputName=\"projectionYear\"\r\n                inputValue={projectionYear}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"years\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n              <SingleInput\r\n                label=\"Appreciation\"\r\n                inputName=\"appreciation\"\r\n                inputValue={appreciation}\r\n                handleOnChange={handleOnChange}\r\n                suffix={\"%\"}\r\n                roundValue={false}\r\n                isNumberInput\r\n              />\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleOnSumbit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultValues;\r\n","import React from \"react\";\r\nimport {\r\n  calculateValueByPercentage,\r\n  getNumbersOnly,\r\n  toCurrency,\r\n} from \"./helpers\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  inputName: string;\r\n  inputValue?: number;\r\n  additionalInfoText?: string;\r\n  disabled?: boolean;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  required?: boolean;\r\n  roundValue?: boolean;\r\n  isNumberInput?: boolean;\r\n  handleOnChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setFormValueByName: (inputName: string, value: number) => void;\r\n  percentageValue: number;\r\n  wholeMonthlyValue: number;\r\n  disableYear?: boolean;\r\n  monthAppendValue?: string;\r\n}\r\n\r\nconst MonthYearPercentInput = ({\r\n  label,\r\n  inputName,\r\n  additionalInfoText,\r\n  percentageValue,\r\n  wholeMonthlyValue,\r\n  handleOnChange,\r\n  setFormValueByName,\r\n  disableYear,\r\n  monthAppendValue,\r\n}: Props) => {\r\n  const monthlyValue = calculateValueByPercentage(\r\n    wholeMonthlyValue,\r\n    percentageValue\r\n  );\r\n\r\n  const handleYearInputOnChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value =\r\n      (Number(getNumbersOnly(event.target.value)) / 12 / wholeMonthlyValue) *\r\n      100;\r\n    setFormValueByName(inputName, value);\r\n  };\r\n\r\n  const handleMonthInputOnChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value =\r\n      (Number(getNumbersOnly(event.target.value)) / wholeMonthlyValue) * 100;\r\n    setFormValueByName(inputName, value);\r\n  };\r\n\r\n  const monthValue = monthlyValue ? toCurrency(Math.ceil(monthlyValue)) : \"\";\r\n\r\n  const value = Math.round(percentageValue * 100) / 100;\r\n  const getYearInput = () => {\r\n    if (disableYear) {\r\n      return null;\r\n    }\r\n\r\n    const yearValue = monthlyValue\r\n      ? toCurrency(Math.ceil(monthlyValue * 12))\r\n      : \"\";\r\n    return (\r\n      <div className=\"col-md-3\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            value={yearValue}\r\n            onChange={handleYearInputOnChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">/yr.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"input-group row py-1\">\r\n      <label className=\"col-md-2\">{label}</label>\r\n      {/* Monthly Input */}\r\n      <div className=\"col-md-4\">\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">$</span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            value={monthValue}\r\n            onChange={handleMonthInputOnChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">{monthAppendValue}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {getYearInput()}\r\n      {/* Percentage Input */}\r\n      <div className=\"col-md-3\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            value={value}\r\n            name={inputName}\r\n            onChange={handleOnChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <span className=\"mx-auto\">{additionalInfoText}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthYearPercentInput;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport { calculateLoan, calculateOutOfPocket, toCurrency } from \"./helpers\";\r\nimport MonthYearPercentInput from \"./MonthYearPercentInput\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setFormValueByName: (inputName: string, value: number) => void;\r\n}\r\n\r\nconst TotalCostOutOfPocket = ({\r\n  form,\r\n  handleOnChange,\r\n  setFormValueByName,\r\n}: Props) => {\r\n  const { downPaymentPercentage, purchasePrice } = form;\r\n\r\n  const loan = calculateLoan(form);\r\n  const outOfPocket = calculateOutOfPocket(form);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        2) Total Cost Out of Pocket: ${toCurrency(calculateOutOfPocket(form))}\r\n      </h2>\r\n      <MonthYearPercentInput\r\n        label=\"Down Payment\"\r\n        inputName=\"downPaymentPercentage\"\r\n        percentageValue={downPaymentPercentage}\r\n        wholeMonthlyValue={purchasePrice}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        disableYear={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Loan\"\r\n        prefix={\"$\"}\r\n        disabled={true}\r\n        inputValue={loan}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Out of Pocket\"\r\n        inputValue={outOfPocket}\r\n        prefix={\"$\"}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalCostOutOfPocket;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport { calculateMonthlyMortgagePayment, toCurrency } from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst MonthlyMortgagePayment = ({ form, handleOnChange }: Props) => {\r\n  const { loanPeriod, loanInterestRate } = form;\r\n\r\n  const monthlyMortgagePayment = calculateMonthlyMortgagePayment(form);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        3) Monthly Mortgage Payment: ${toCurrency(monthlyMortgagePayment)}\r\n        /mo.\r\n      </h2>\r\n      <SingleInput\r\n        label=\"Loan Period\"\r\n        inputValue={loanPeriod}\r\n        inputName=\"loanPeriod\"\r\n        handleOnChange={handleOnChange}\r\n        suffix=\"years\"\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Interest Rate\"\r\n        inputValue={loanInterestRate}\r\n        inputName=\"loanInterestRate\"\r\n        handleOnChange={handleOnChange}\r\n        suffix=\"%\"\r\n        roundValue={false}\r\n        isNumberInput\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyMortgagePayment;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport { toCurrency } from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst TotalIncome = ({ form, handleOnChange }: Props) => {\r\n  const { rent } = form;\r\n  return (\r\n    <div>\r\n      <h2>4) Total Income: $ {toCurrency(rent || 0)}/mo.</h2>\r\n\r\n      <SingleInput\r\n        label=\"Rent\"\r\n        inputValue={rent}\r\n        inputName=\"rent\"\r\n        handleOnChange={handleOnChange}\r\n        prefix={\"$\"}\r\n        suffix=\"/mo.\"\r\n        required={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalIncome;\r\n","import React from \"react\";\r\nimport { toCurrency } from \"./helpers\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  inputName: string;\r\n  inputValue?: number;\r\n  handleOnChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setFormValueByName: (inputName: string, value: number) => void;\r\n}\r\n\r\nconst MonthYearInput = ({\r\n  label,\r\n  inputName,\r\n  inputValue,\r\n  handleOnChange,\r\n  setFormValueByName,\r\n}: Props) => {\r\n  const handleYearInputOnChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value = Number(event.target.value.replace(/\\D/g, \"\")) / 12;\r\n    setFormValueByName(inputName, value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-group row py-1 \">\r\n      <label className=\"col-md-2\">{label}</label>\r\n      <div className=\"col-md-4\">\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">$</span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            name={inputName}\r\n            value={inputValue ? toCurrency(Math.ceil(inputValue)) : \"\"}\r\n            onChange={handleOnChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">/mo.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            value={inputValue ? toCurrency(inputValue * 12) : \"\"}\r\n            onChange={handleYearInputOnChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">/yr.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthYearInput;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport MonthYearPercentInput from \"./MonthYearPercentInput\";\r\nimport {\r\n  calculateMonthlyMortgagePayment,\r\n  toCurrency,\r\n  calculateTotalExpenses,\r\n} from \"./helpers\";\r\nimport { FormData } from \"./Calculator\";\r\nimport MonthYearInput from \"./MonthYearInput\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setFormValueByName: (inputName: string, value: number) => void;\r\n}\r\n\r\nconst TotalExpenses = ({ form, handleOnChange, setFormValueByName }: Props) => {\r\n  const mortgage = calculateMonthlyMortgagePayment(form);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        5) Total Expenses: $ {toCurrency(calculateTotalExpenses(form))}\r\n        /mo.\r\n      </h2>\r\n      <SingleInput\r\n        label=\"Mortgage\"\r\n        inputValue={mortgage}\r\n        disabled={true}\r\n        prefix=\"$\"\r\n        suffix=\"/mo.\"\r\n      />\r\n\r\n      <MonthYearPercentInput\r\n        label=\"Vacancy\"\r\n        inputName=\"vacancyRate\"\r\n        percentageValue={form.vacancyRate}\r\n        wholeMonthlyValue={form.rent}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n      <MonthYearPercentInput\r\n        label=\"Repairs\"\r\n        inputName=\"repairsRate\"\r\n        percentageValue={form.repairsRate}\r\n        wholeMonthlyValue={form.rent}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n      <MonthYearPercentInput\r\n        label=\"Capital Expenditures\"\r\n        inputName=\"capitalExpendituresRate\"\r\n        percentageValue={form.capitalExpendituresRate}\r\n        wholeMonthlyValue={form.rent}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n      <MonthYearPercentInput\r\n        label=\"Insurance\"\r\n        inputName=\"insuranceRate\"\r\n        percentageValue={form.insuranceRate}\r\n        wholeMonthlyValue={form.purchasePrice / 12}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n      <MonthYearPercentInput\r\n        label=\"Taxes\"\r\n        inputName=\"taxRate\"\r\n        percentageValue={form.taxRate}\r\n        wholeMonthlyValue={form.purchasePrice / 12}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n      <MonthYearInput\r\n        label=\"Flood Insurance\"\r\n        inputName=\"floodInsuranceMonthlyCost\"\r\n        inputValue={form.floodInsuranceMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"Electricity\"\r\n        inputName=\"electricityMonthlyCost\"\r\n        inputValue={form.electricityMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"Water\"\r\n        inputName=\"waterMonthlyCost\"\r\n        inputValue={form.waterMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"Sewer\"\r\n        inputName=\"sewerMonthlyCost\"\r\n        inputValue={form.sewerMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"Gas\"\r\n        inputName=\"gasMonthlyCost\"\r\n        inputValue={form.gasMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"Garbage\"\r\n        inputName=\"garbageMonthlyCost\"\r\n        inputValue={form.garbageMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearInput\r\n        label=\"HOA\"\r\n        inputName=\"hoaMonthlyCost\"\r\n        inputValue={form.hoaMonthlyCost}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n      />\r\n      <MonthYearPercentInput\r\n        label=\"Property Management\"\r\n        inputName=\"propertyManagementRate\"\r\n        percentageValue={form.propertyManagementRate}\r\n        wholeMonthlyValue={form.rent}\r\n        handleOnChange={handleOnChange}\r\n        setFormValueByName={setFormValueByName}\r\n        monthAppendValue=\"/mo.\"\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Total Expenses\"\r\n        inputValue={calculateTotalExpenses(form)}\r\n        disabled={true}\r\n        prefix=\"$\"\r\n        suffix=\"/mo.\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalExpenses;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport {\r\n  calculateMonthlyCashFlow,\r\n  calculateROIWithoutMortgage,\r\n  calculateROI,\r\n} from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n}\r\n\r\nconst Evaluation = ({ form }: Props) => {\r\n  return (\r\n    <div>\r\n      <h2>6) Evaluation</h2>\r\n      <SingleInput\r\n        label=\"Cashflow\"\r\n        inputValue={calculateMonthlyCashFlow(form)}\r\n        prefix=\"$\"\r\n        suffix=\"/mo.\"\r\n        disabled={true}\r\n      />\r\n      <SingleInput\r\n        label=\"ROI (without mortgage)\"\r\n        inputValue={calculateROIWithoutMortgage(form)}\r\n        suffix=\"%\"\r\n        disabled={true}\r\n      />\r\n      <SingleInput\r\n        label=\"ROI\"\r\n        inputValue={calculateROI(form)}\r\n        suffix=\"%\"\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Evaluation;\r\n","import React from \"react\";\r\nimport SingleInput from \"./SingleInput\";\r\nimport { FormData } from \"./Calculator\";\r\nimport {\r\n  calculateProjectionSalePrice,\r\n  calculateProjectionSaleExpenses,\r\n  calculateProjectionLoanPayoff,\r\n  calculateProjectionTotalInvestedCapital,\r\n  calculateProjectionSaleProfit,\r\n  calculateProjectionTotalCashflow,\r\n  calculateProjectionTotalProfit,\r\n  calculateProjectionROI,\r\n} from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Projection = ({ form, handleOnChange }: Props) => {\r\n  const { projectionYear, afterRepairValue, appreciation } = form;\r\n\r\n  return (\r\n    <div>\r\n      <h2>7) Projection</h2>\r\n\r\n      <SingleInput\r\n        label=\"Year\"\r\n        inputValue={projectionYear}\r\n        inputName=\"projectionYear\"\r\n        handleOnChange={handleOnChange}\r\n        suffix=\"yr.\"\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"After Repair Value (ARV)\"\r\n        inputValue={afterRepairValue}\r\n        inputName=\"afterRepairValue\"\r\n        handleOnChange={handleOnChange}\r\n        prefix=\"$\"\r\n        required={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Appreciation\"\r\n        inputValue={appreciation}\r\n        inputName=\"appreciation\"\r\n        handleOnChange={handleOnChange}\r\n        suffix=\"%\"\r\n        roundValue={false}\r\n        additionalInfoText=\"(National Average: 4.4%)\"\r\n        isNumberInput={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Sale Price\"\r\n        inputValue={calculateProjectionSalePrice(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Sale Expenses\"\r\n        inputValue={calculateProjectionSaleExpenses(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Loan Payoff\"\r\n        inputValue={calculateProjectionLoanPayoff(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Total Invested Capital\"\r\n        inputValue={calculateProjectionTotalInvestedCapital(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Profit\"\r\n        inputValue={calculateProjectionSaleProfit(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Total cashflow\"\r\n        inputValue={calculateProjectionTotalCashflow(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"Total Profit (with cashflow)\"\r\n        inputValue={calculateProjectionTotalProfit(form)}\r\n        prefix=\"$\"\r\n        disabled={true}\r\n      />\r\n\r\n      <SingleInput\r\n        label=\"ROI\"\r\n        inputValue={calculateProjectionROI(form)}\r\n        suffix=\"%\"\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projection;\r\n","import React from \"react\";\r\nimport {\r\n  AreaChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Area,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { FormData } from \"./Calculator\";\r\nimport {\r\n  calculateProjectionSalePrice,\r\n  calculateProjectionLoanPayoff,\r\n} from \"./helpers\";\r\n\r\ninterface Props {\r\n  form: FormData;\r\n}\r\n\r\ninterface GraphPoint {\r\n  name: string;\r\n  equity: number;\r\n  loanPayoff: number;\r\n  propertyValue: number;\r\n}\r\n\r\nconst LoanBalanceValueEquity = ({ form }: Props) => {\r\n  const getGraphPoints = (numberOfYear: number): GraphPoint[] => {\r\n    const points: GraphPoint[] = [];\r\n    for (let i = 0; i <= numberOfYear; i = i + 1) {\r\n      const loanPayoff = Math.floor(\r\n        calculateProjectionLoanPayoff({\r\n          ...form,\r\n          projectionYear: i,\r\n        })\r\n      );\r\n      const propertyValue = Math.floor(\r\n        calculateProjectionSalePrice({\r\n          ...form,\r\n          projectionYear: i,\r\n        })\r\n      );\r\n      points.push({\r\n        name: `Year ${i}`,\r\n        equity: propertyValue - loanPayoff,\r\n        loanPayoff: loanPayoff,\r\n        propertyValue: propertyValue,\r\n      });\r\n    }\r\n\r\n    return points;\r\n  };\r\n\r\n  const data = getGraphPoints(30);\r\n\r\n  const opacity = 0.3;\r\n\r\n  return (\r\n    <div>\r\n      <AreaChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" align=\"center\" />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"propertyValue\"\r\n          stroke=\"#ffc658\"\r\n          fill=\"#ffc658\"\r\n          fillOpacity={opacity}\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"equity\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n          fillOpacity={opacity}\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"loanPayoff\"\r\n          stroke=\"#82ca9d\"\r\n          fill=\"#82ca9d\"\r\n          fillOpacity={opacity}\r\n        />\r\n      </AreaChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanBalanceValueEquity;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport TotalProjectCost from \"./TotalProjectCost\";\nimport { useLocalStorage } from \"./helpers\";\nimport PropertyInfo from \"./PropertyInfo\";\nimport DefaultValues from \"./DefaultValues\";\nimport TotalCostOutOfPocket from \"./TotalCostOutOfPocket\";\nimport MonthlyMortgagePayment from \"./MonthlyMortgagePayment\";\nimport TotalIncome from \"./TotalIncome\";\nimport TotalExpenses from \"./TotalExpenses\";\nimport Evaluation from \"./Evaluation\";\nimport Projection from \"./Projection\";\nimport LoanBalanceValueEquity from \"./LoanBalanceValueEquity\";\nimport { Link } from \"react-router-dom\";\n\nexport interface FormData {\n  address: string;\n  purchasePrice: number;\n  purchaseClosingCost: number;\n  loanPeriod: number;\n  loanInterestRate: number;\n  downPaymentPercentage: number;\n  vacancyRate: number;\n  repairsRate: number;\n  capitalExpendituresRate: number;\n  insuranceRate: number;\n  taxRate: number;\n  propertyManagementRate: number;\n  projectionYear: number;\n  appreciation: number;\n  preRentHoldingCost: number;\n  estimateRepairCost: number;\n  askingPrice: number;\n  rent: number;\n  floodInsuranceMonthlyCost: number;\n  electricityMonthlyCost: number;\n  waterMonthlyCost: number;\n  sewerMonthlyCost: number;\n  gasMonthlyCost: number;\n  garbageMonthlyCost: number;\n  hoaMonthlyCost: number;\n  afterRepairValue: number;\n}\n\nconst Calculator = () => {\n  const initialDefaults = {\n    address: \"\",\n    purchaseClosingCosts: 5000,\n    loanPeriod: 30,\n    interestRate: 5,\n    downPaymentPercentage: 20,\n    vacancyRate: 5,\n    repairsRate: 5,\n    capitalExpendituresRate: 12.5,\n    insuranceRate: 0.5,\n    taxRate: 1.06,\n    propertyManagementRate: 11,\n    projectionYear: 5,\n    appreciation: 4.4,\n  };\n\n  const [defaults, setDefaults] = useLocalStorage(\"defaults\", initialDefaults);\n  const [savedForm, setSavedForm] = useLocalStorage(\"form\", initialDefaults);\n\n  const [form, setForm] = React.useState(savedForm || initialDefaults);\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const trimmedValue = event.target.value.replace(/,/g, \"\");\n    if (!isNaN(Number(trimmedValue))) {\n      const newForm = {\n        ...form,\n        [event.target.name]: Number(trimmedValue),\n      };\n      setForm(newForm);\n\n      setSavedForm(newForm);\n    }\n  };\n\n  const handleTextOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newForm = {\n      ...form,\n      [event.target.name]: event.target.value,\n    };\n    setForm(newForm);\n\n    setSavedForm(newForm);\n  };\n\n  const handleDefaultsSubmission = (newDefaults: FormData) => {\n    const newDefaultsString = newDefaults;\n\n    setDefaults(newDefaultsString);\n    const newForm = { ...form, ...newDefaults };\n    setForm(newForm);\n    setSavedForm(newForm);\n  };\n\n  const setFormValueByName = (name: string, value: number) => {\n    const newForm = {\n      ...form,\n      [name]: Number(value),\n    };\n    setForm(newForm);\n\n    setSavedForm(newForm);\n  };\n\n  const handleResetNumbersButtonClick = () => {\n    setSavedForm(initialDefaults);\n    setForm(initialDefaults);\n  };\n\n  return (\n    <div className=\"App\">\n      <Link to=\"/brrrr-calculator\">BRRRR Calculator</Link>\n      <div className=\"container\">\n        <h1 className=\"text-center\">RE Calculator</h1>\n\n        <hr className=\"solid\" />\n        <DefaultValues\n          defaults={defaults}\n          handleOnSubmit={handleDefaultsSubmission}\n        />\n        <div>\n          <Button\n            variant=\"primary\"\n            onClick={handleResetNumbersButtonClick}\n            className=\"float-right clear-fix\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Reset Numbers\n          </Button>\n          <br />\n        </div>\n        <form>\n          <PropertyInfo\n            form={form}\n            handleOnChange={handleOnChange}\n            handleTextOnChange={handleTextOnChange}\n          />\n          <TotalProjectCost form={form} handleOnChange={handleOnChange} />\n          <TotalCostOutOfPocket\n            form={form}\n            handleOnChange={handleOnChange}\n            setFormValueByName={setFormValueByName}\n          />\n          <MonthlyMortgagePayment form={form} handleOnChange={handleOnChange} />\n          <TotalIncome form={form} handleOnChange={handleOnChange} />\n          <TotalExpenses\n            form={form}\n            handleOnChange={handleOnChange}\n            setFormValueByName={setFormValueByName}\n          />\n          <Evaluation form={form} />\n          <Projection form={form} handleOnChange={handleOnChange} />\n          <LoanBalanceValueEquity form={form} />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\r\nimport Calculator from \"../Calculator\";\r\n\r\nconst HomePage = () => {\r\n  return <Calculator />;\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport { Data } from \"../BrrrrCalculator\";\r\n\r\ninterface Props {\r\n  data: Data;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst PropertyInfo = ({ data, handleOnChange }: Props) => {\r\n  return (\r\n    <div style={{ marginTop: \"30px\" }}>\r\n      <div className=\"mx-auto\" style={{ width: \"auto\" }}>\r\n        <h2 className=\"py-md-2\">Property Info</h2>\r\n      </div>\r\n      <label>Property Address</label>\r\n      <FormControl\r\n        value={data.address || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"address\"\r\n        type=\"text\"\r\n      />\r\n      <label>Property City</label>\r\n      <FormControl\r\n        value={data.city || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"city\"\r\n        type=\"text\"\r\n      />\r\n      <label>Property State</label>\r\n      <FormControl\r\n        value={data.state || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"state\"\r\n        type=\"text\"\r\n      />\r\n      <label>Property Zip</label>\r\n      <FormControl\r\n        value={data.zip || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"zip\"\r\n        type=\"text\"\r\n      />\r\n      <label>Annual Property Taxes</label>\r\n      <FormControl\r\n        value={data.annualPropertyTaxes || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"annualPropertyTaxes\"\r\n        type=\"text\"\r\n      />\r\n      <label>MLS Number</label>\r\n      <FormControl\r\n        value={data.mlsNumber || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"mlsNumber\"\r\n        type=\"text\"\r\n      />\r\n      <label>Property Sales Description</label>\r\n      <FormControl\r\n        value={data.salesDescription || \"\"}\r\n        onChange={handleOnChange}\r\n        name=\"salesDescription\"\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyInfo;\r\n","import React from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  value: number;\r\n  name: string;\r\n  required?: boolean;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst NumberInput = ({ value, name, required = false, onChange }: Props) => {\r\n  return (\r\n    <FormControl\r\n      value={Number.isNaN(value) ? \"\" : value}\r\n      type=\"number\"\r\n      onChange={onChange}\r\n      name={name}\r\n      //isValid={required && value ? true : false}\r\n      isInvalid={required && !value ? true : false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React from \"react\";\r\nimport { Data } from \"../BrrrrCalculator\";\r\nimport NumberInput from \"../Components/NumberInput\";\r\n\r\ninterface Props {\r\n  data: Data;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst PurchaseInfo = ({ data, handleOnChange }: Props) => {\r\n  return (\r\n    <div style={{ marginTop: \"30px\" }}>\r\n      <h2>Purchase Info</h2>\r\n      <label>Purchase Price</label>\r\n      <NumberInput\r\n        value={data.purchasePrice}\r\n        onChange={handleOnChange}\r\n        name=\"purchasePrice\"\r\n        required={true}\r\n      />\r\n      <label>After Repair Value</label>\r\n      <NumberInput\r\n        value={data.afterRepairPrice}\r\n        onChange={handleOnChange}\r\n        name=\"afterRepairPrice\"\r\n      />\r\n      <label>Purchase Closing Cost</label>\r\n      <NumberInput\r\n        value={data.purchaseClosingCost}\r\n        onChange={handleOnChange}\r\n        name=\"purchaseClosingCost\"\r\n      />\r\n      <label>Estimated Repair Cost</label>\r\n      <NumberInput\r\n        value={data.estimateRepairCost}\r\n        onChange={handleOnChange}\r\n        name=\"estimateRepairCost\"\r\n      />\r\n      <label>Down Payment of Purchase Price</label>\r\n      <NumberInput\r\n        value={data.downPaymentPercentage}\r\n        onChange={handleOnChange}\r\n        name=\"downPaymentPercentage\"\r\n      />\r\n      <label>Loan Interest Rate</label>\r\n      <NumberInput\r\n        value={data.loanInterestRate}\r\n        onChange={handleOnChange}\r\n        name=\"loanInterestRate\"\r\n      />\r\n      <label>Amortized Over How Many Years</label>\r\n      <NumberInput\r\n        value={data.loanPeriod}\r\n        onChange={handleOnChange}\r\n        name=\"loanPeriod\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseInfo;\r\n","import React from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport { Data } from \"../BrrrrCalculator\";\r\nimport NumberInput from \"../Components/NumberInput\";\r\nimport { toCurrency } from \"../../helpers\";\r\n\r\ninterface Props {\r\n  data: Data;\r\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst RentalInfo = ({ data, handleOnChange }: Props) => {\r\n  return (\r\n    <div style={{ marginTop: \"30px\" }}>\r\n      <h2>Rental Info</h2>\r\n      <h3 className=\"pt-md-3\">Income</h3>\r\n      <label>Total Gross Monthly Rent</label>\r\n      <NumberInput\r\n        value={data.monthlyRent}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyRent\"\r\n        required={true}\r\n      />\r\n      <label>Other Monthly Income</label>\r\n      <NumberInput\r\n        value={data.otherMonthlyIncome}\r\n        onChange={handleOnChange}\r\n        name=\"otherMonthlyIncome\"\r\n      />\r\n\r\n      <h3 className=\"pt-md-3\">Fixed Landlord-Paid Expenses</h3>\r\n      <label>Electricity</label>\r\n      <NumberInput\r\n        value={data.monthlyElectricyCost}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyElectricyCost\"\r\n      />\r\n      <label>{`Water & Sewer`}</label>\r\n      <NumberInput\r\n        value={data.monthlyWaterAndSewerCost}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyWaterAndSewerCost\"\r\n      />\r\n      <label>PMI</label>\r\n      <NumberInput\r\n        value={data.monthlyPmiCost}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyPmiCost\"\r\n      />\r\n      <label>Garbage</label>\r\n      <NumberInput\r\n        value={data.monthlyGarbageCost}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyGarbageCost\"\r\n      />\r\n      <label>HOAs</label>\r\n      <NumberInput\r\n        value={data.monthlyHoaCost}\r\n        onChange={handleOnChange}\r\n        name=\"monthlyHoaCost\"\r\n      />\r\n      <label>Property Taxes</label>\r\n      <FormControl\r\n        value={\r\n          data.annualPropertyTaxes\r\n            ? toCurrency(data.annualPropertyTaxes / 12)\r\n            : \"\"\r\n        }\r\n        disabled={true}\r\n      />\r\n      <label>Other Monthly Expenses</label>\r\n      <NumberInput\r\n        value={data.otherMontnlyExpenses}\r\n        onChange={handleOnChange}\r\n        name=\"otherMontnlyExpenses\"\r\n      />\r\n\r\n      <h3 className=\"pt-md-3\">Variable Landlord-Paid Expenses</h3>\r\n      <label>Vacancy</label>\r\n      <NumberInput\r\n        value={data.vacancyRate}\r\n        onChange={handleOnChange}\r\n        name=\"vacancyRate\"\r\n      />\r\n\r\n      <label>Repairs and Maintenance</label>\r\n      <NumberInput\r\n        value={data.repairsAndMaintenanceRate}\r\n        onChange={handleOnChange}\r\n        name=\"repairsAndMaintenanceRate\"\r\n      />\r\n\r\n      <label>Capital Expenditures</label>\r\n      <NumberInput\r\n        value={data.capitalExpendituresRate}\r\n        onChange={handleOnChange}\r\n        name=\"capitalExpendituresRate\"\r\n      />\r\n\r\n      <label>Management Fees</label>\r\n      <NumberInput\r\n        value={data.propertyManagementRate}\r\n        onChange={handleOnChange}\r\n        name=\"propertyManagementRate\"\r\n      />\r\n\r\n      <h3 className=\"pt-md-3\">Future Assumptions</h3>\r\n      <label>Annual Income Growth</label>\r\n      <NumberInput\r\n        value={data.annualIncomeGrowth}\r\n        onChange={handleOnChange}\r\n        name=\"annualIncomeGrowth\"\r\n      />\r\n\r\n      <label>Annual Property Value Growth</label>\r\n      <NumberInput\r\n        value={data.annualPropertyValueGrowth}\r\n        onChange={handleOnChange}\r\n        name=\"annualPropertyValueGrowth\"\r\n      />\r\n\r\n      <label>Annual Expenses Growth</label>\r\n      <NumberInput\r\n        value={data.annualExpensesGrowth}\r\n        onChange={handleOnChange}\r\n        name=\"annualExpensesGrowth\"\r\n      />\r\n\r\n      <label>Sales Expenese</label>\r\n      <NumberInput\r\n        value={data.salesExpenses}\r\n        onChange={handleOnChange}\r\n        name=\"salesExpenses\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RentalInfo;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Data } from \"../BrrrrCalculator\";\r\nimport {\r\n  calculateProjectedTotalAnnualIncome,\r\n  toCurrency,\r\n  calculateProjectedTotalAnnualExpenses,\r\n  calculateProjectedAnnualOperatingExpenses,\r\n  calculateMonthlyMortgagePayment,\r\n  calculateProjectedTotalAnnualCashflow,\r\n  calculateProjectedCashOnCashROI,\r\n  calculateProjectedLoanBalance,\r\n  calculateProjectedTotalProfitIfSold,\r\n  calculateProjectedEquity,\r\n  calculateProjectedPropertyValue,\r\n  calculateProjectedAnnualizedTotalReturn,\r\n} from \"../../helpers\";\r\nimport \"./Results.css\";\r\n\r\ninterface Props {\r\n  data: Data;\r\n}\r\n\r\ninterface ProjectedData {\r\n  totalIncome: string;\r\n  totalExpenses: string;\r\n  operatingExpenses: string;\r\n  propertyValue: string;\r\n  mortgagePayment: string;\r\n  totalCashflow: string;\r\n  cashOnCashROI: string;\r\n  loanBalance: string;\r\n  equity: string;\r\n  projectionYear: number;\r\n  totalProfitIfSold: string;\r\n  annualizedTotalReturn: string;\r\n}\r\n\r\nconst AnalysisOverTime = ({ data }: Props) => {\r\n  const projectionYears = [1, 2, 5, 10, 15, 20, 30];\r\n  const projectedNumbersByYear = projectionYears.map((year) => {\r\n    const projectedYear = year - 1;\r\n    return {\r\n      projectionYear: year,\r\n      totalIncome: `$${toCurrency(\r\n        calculateProjectedTotalAnnualIncome(data, projectedYear)\r\n      )}`,\r\n      totalExpenses: `$${toCurrency(\r\n        calculateProjectedTotalAnnualExpenses(data, projectedYear)\r\n      )}`,\r\n      operatingExpenses: `$${toCurrency(\r\n        calculateProjectedAnnualOperatingExpenses(data, projectedYear)\r\n      )}`,\r\n      mortgagePayment: `$${toCurrency(\r\n        calculateMonthlyMortgagePayment(data) * 12\r\n      )}`,\r\n      totalCashflow: `$${toCurrency(\r\n        calculateProjectedTotalAnnualCashflow(data, projectedYear)\r\n      )}`,\r\n      cashOnCashROI: `${toCurrency(\r\n        calculateProjectedCashOnCashROI(data, projectedYear)\r\n      )}%`,\r\n      propertyValue: `$${toCurrency(\r\n        calculateProjectedPropertyValue(data, year)\r\n      )}`,\r\n      equity: `$${toCurrency(calculateProjectedEquity(data, year))}`,\r\n      loanBalance: `$${toCurrency(calculateProjectedLoanBalance(data, year))}`,\r\n      totalProfitIfSold: `$${toCurrency(\r\n        calculateProjectedTotalProfitIfSold(data, year)\r\n      )}`,\r\n      annualizedTotalReturn: `${toCurrency(\r\n        calculateProjectedAnnualizedTotalReturn(data, year)\r\n      )}%`,\r\n    } as ProjectedData;\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: \"30px\" }}>\r\n      <h2>Analysis Over Time</h2>\r\n      <div>{`Expense Increase: ${data.annualExpensesGrowth || 0}%/year`}</div>\r\n      <div>{`Income Increase: ${data.annualIncomeGrowth || 0}%/year`}</div>\r\n      <div>{`Property Value Increase: ${\r\n        data.annualPropertyValueGrowth || 0\r\n      }%/year`}</div>\r\n      <Table bordered size=\"sm\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            {projectionYears.map((year) => {\r\n              return <th>{`Year ${year}`}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Total Annual Income</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.totalIncome}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td>Total Annual Expenses</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.totalExpenses}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td style={{ paddingLeft: \"2rem\" }}>Operating Expenses</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.operatingExpenses}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td style={{ paddingLeft: \"2rem\" }}>Mortgage Payment</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.mortgagePayment}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>Total Annual Cashflow</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.totalCashflow}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td>Cash on Cash ROI</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.cashOnCashROI}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>Property Value</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.propertyValue}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td>Equity</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.equity}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>Loan Balance</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.loanBalance}</td>;\r\n            })}\r\n          </tr>\r\n          <tr className=\"striped\">\r\n            <td>Total Profit If Sold</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.totalProfitIfSold}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>Annualized Total Return</td>\r\n            {projectedNumbersByYear.map((numbers) => {\r\n              return <td>{numbers.annualizedTotalReturn}</td>;\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisOverTime;\r\n","import React, { useState } from \"react\";\r\nimport { Data } from \"../BrrrrCalculator\";\r\nimport { Container, Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nimport {\r\n  calculateTotalProjectCost,\r\n  toCurrency,\r\n  calculateDownPayment,\r\n  calculateLoan,\r\n  calculateMonthlyMortgagePayment,\r\n  calculateOutOfPocket,\r\n  calculateMonthlyVacancyCost,\r\n  calculateMonthlyManagementCost,\r\n  calculateMonthlyRepairsCost,\r\n  calculateMonthlyCapitalExpendituresCost,\r\n  calculateMonthlyInsuranceCost,\r\n  calculateMonthlyTaxCost,\r\n  calculateTotalMonthyOperatingExpenses,\r\n  calculateMonthlyTotalIncome,\r\n  calculateMonthlyTotalExpenses,\r\n  calculateProjectedTotalAnnualCashflow,\r\n  calculateProjectedCashOnCashROI,\r\n  calculateNetOperatingIncome,\r\n  calculatePurchaseCapRate,\r\n  calculateProFormaCap,\r\n} from \"../../helpers\";\r\n\r\ninterface Props {\r\n  data: Data;\r\n}\r\n\r\ninterface KeyValuePair {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nconst Report = ({ data }: Props) => {\r\n  const { address = \"\", city = \"\", state = \"\", zip = \"\" } = data;\r\n  const hasFullAddress = address && city && state && zip;\r\n  const [key, setKey] = useState(\"expenses\");\r\n  const summary = [\r\n    {\r\n      key: \"Purchase Closing Costs\",\r\n      value: `$${toCurrency(data.purchaseClosingCost)}`,\r\n    },\r\n    {\r\n      key: \"Estimated Repairs\",\r\n      value: `$${toCurrency(data.estimateRepairCost)}`,\r\n    },\r\n    {\r\n      key: \"Total Project Cost\",\r\n      value: `$${toCurrency(calculateTotalProjectCost(data))}`,\r\n    },\r\n    {\r\n      key: \"After Repair Value\",\r\n      value: `$${data.afterRepairPrice}`,\r\n    },\r\n    {\r\n      key: \"Down Payment\",\r\n      value: `$${toCurrency(calculateDownPayment(data))}`,\r\n    },\r\n    {\r\n      key: \"Loan Amount\",\r\n      value: `$${toCurrency(calculateLoan(data))}`,\r\n    },\r\n    {\r\n      key: \"Amortized Over\",\r\n      value: `${data.loanPeriod} years`,\r\n    },\r\n    {\r\n      key: \"Loan Interest Rate\",\r\n      value: `${data.loanInterestRate}%`,\r\n    },\r\n    {\r\n      key: `Monthly P&I`,\r\n      value: `$${toCurrency(calculateMonthlyMortgagePayment(data))}`,\r\n    },\r\n    {\r\n      key: `Total Cash Needed`,\r\n      value: `$${toCurrency(calculateOutOfPocket(data))}`,\r\n    },\r\n  ] as KeyValuePair[];\r\n\r\n  const formatDataPointValue = (number: number): number => {\r\n    return Number((number || 0).toFixed(2));\r\n  };\r\n  const formatDataPointLabel = (label: string, value: number): string => {\r\n    return `${label}: $${formatDataPointValue(value)}`;\r\n  };\r\n\r\n  const getExpenseDataPoints = () => {\r\n    return [\r\n      [\"Expense\", \"Cost\"],\r\n      [\r\n        formatDataPointLabel(\"Mortgage\", calculateMonthlyMortgagePayment(data)),\r\n        formatDataPointValue(calculateMonthlyMortgagePayment(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\"Vacancy\", calculateMonthlyVacancyCost(data)),\r\n        formatDataPointValue(calculateMonthlyVacancyCost(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\r\n          \"Management\",\r\n          calculateMonthlyManagementCost(data)\r\n        ),\r\n        formatDataPointValue(calculateMonthlyManagementCost(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\"Repairs\", calculateMonthlyRepairsCost(data)),\r\n        formatDataPointValue(calculateMonthlyRepairsCost(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\r\n          \"CapEx\",\r\n          calculateMonthlyCapitalExpendituresCost(data)\r\n        ),\r\n        formatDataPointValue(calculateMonthlyCapitalExpendituresCost(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\"Insurance\", calculateMonthlyInsuranceCost(data)),\r\n        formatDataPointValue(calculateMonthlyInsuranceCost(data)),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\"Tax\", calculateMonthlyTaxCost(data)),\r\n        formatDataPointValue(calculateMonthlyTaxCost(data)),\r\n      ],\r\n    ];\r\n  };\r\n\r\n  const fiftyPercentRule = [\r\n    {\r\n      key: \"Total Monthly Income\",\r\n      value: `$${toCurrency(calculateMonthlyTotalIncome(data))}`,\r\n    },\r\n    {\r\n      key: \"x50% for Expenses\",\r\n      value: `$${toCurrency(calculateMonthlyTotalIncome(data) / 2)}`,\r\n    },\r\n    {\r\n      key: \"Mortgage Payment\",\r\n      value: `$${toCurrency(calculateMonthlyMortgagePayment(data))}`,\r\n    },\r\n    {\r\n      key: \"Monthly Cashflow using 50% Rule\",\r\n      value: `$${toCurrency(\r\n        calculateMonthlyTotalIncome(data) / 2 -\r\n          calculateMonthlyMortgagePayment(data)\r\n      )}`,\r\n    },\r\n  ];\r\n\r\n  const getIncomeDataPoints = () => {\r\n    return [\r\n      [\"Income\", \"Value\"],\r\n      [\r\n        formatDataPointLabel(\"Rent\", data.monthlyRent),\r\n        formatDataPointValue(data.monthlyRent),\r\n      ],\r\n      [\r\n        formatDataPointLabel(\"Other\", data.otherMonthlyIncome),\r\n        formatDataPointValue(data.otherMonthlyIncome),\r\n      ],\r\n    ];\r\n  };\r\n\r\n  const displayKeyValuePairs = (pairs: KeyValuePair[]) => {\r\n    return pairs.map((x) => (\r\n      <Row>\r\n        <Col xs={8}>{x.key}</Col>\r\n        <Col xs={4} className=\"font-weight-bold text-right\">\r\n          {x.value}\r\n        </Col>\r\n      </Row>\r\n    ));\r\n  };\r\n\r\n  const displayKeyValuePairs2 = (fiftyPercentRule: KeyValuePair[]) => {\r\n    return fiftyPercentRule.map((x) => (\r\n      <Row>\r\n        <Col md={6}></Col>\r\n        <Col md={6}>\r\n          <Row>\r\n            <Col xs={8}>{x.key}</Col>\r\n            <Col xs={4} className=\"font-weight-bold text-right\">\r\n              {x.value}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n  };\r\n\r\n  const displayKeyValuePairs3 = (pairs: KeyValuePair[]) => {\r\n    return (\r\n      <Row>\r\n        {pairs.map((x) => (\r\n          <Col md={3}>\r\n            <Row className=\"py-md-2\">\r\n              <Col md={12} xs={8}>\r\n                {x.key}\r\n              </Col>\r\n              <Col md={12} xs={4} className=\"font-weight-bold \">\r\n                <span className=\"d-none d-sm-block\">{x.value}</span>\r\n                <span className=\"text-right d-block d-sm-none\">{x.value}</span>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const getExpenseTabKeyValuePairs = [\r\n    {\r\n      key: \"Total Operating Expeneses\",\r\n      value: `$${toCurrency(calculateTotalMonthyOperatingExpenses(data))}`,\r\n    },\r\n    {\r\n      key: \"Mortgage Expeneses\",\r\n      value: `$${toCurrency(calculateMonthlyMortgagePayment(data))}`,\r\n    },\r\n  ] as KeyValuePair[];\r\n\r\n  const getIncomeTabKeyValuePairs = [\r\n    {\r\n      key: \"Monthly Income\",\r\n      value: `$${toCurrency(calculateMonthlyTotalIncome(data))}`,\r\n    },\r\n  ] as KeyValuePair[];\r\n\r\n  return (\r\n    <div style={{ marginTop: \"30px\" }}>\r\n      <h2>{hasFullAddress && `${address} ${city} ${state}, ${zip}`}</h2>\r\n      <Container>\r\n        <Row className=\"py-3\">\r\n          <Col md={4}>\r\n            <Row>\r\n              <Col md={12} xs={8}>\r\n                Purchase Price\r\n              </Col>\r\n              <Col md={12} xs={4} className=\"font-weight-bold\">\r\n                <span className=\"d-none d-sm-block\">\r\n                  {`$${toCurrency(data.purchasePrice)}`}\r\n                </span>\r\n                <span className=\"text-right d-block d-sm-none\">\r\n                  {`$${toCurrency(data.purchasePrice)}`}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col md={8}>\r\n            {displayKeyValuePairs3([\r\n              {\r\n                key: \"Monthly Income\",\r\n                value: `$${toCurrency(calculateMonthlyTotalIncome(data))}`,\r\n              },\r\n              {\r\n                key: \"Monthly Expenses\",\r\n                value: `$${toCurrency(calculateMonthlyTotalExpenses(data))}`,\r\n              },\r\n\r\n              {\r\n                key: \"Monthly Cashflow\",\r\n                value: `$${toCurrency(\r\n                  calculateProjectedTotalAnnualCashflow(data) / 12\r\n                )}`,\r\n              },\r\n              {\r\n                key: \"Pro Forma Cap\",\r\n                value: `${toCurrency(calculateProFormaCap(data))}%`,\r\n              },\r\n              {\r\n                key: \"Net Operating Income\",\r\n                value: `$${toCurrency(calculateNetOperatingIncome(data))}`,\r\n              },\r\n              {\r\n                key: \"Total Cash Needed\",\r\n                value: `$${toCurrency(calculateOutOfPocket(data))}`,\r\n              },\r\n              {\r\n                key: \"Cash on Cash ROI\",\r\n                value: `${toCurrency(calculateProjectedCashOnCashROI(data))}%`,\r\n              },\r\n              {\r\n                key: \"Purchase Cap Rate\",\r\n                value: `${toCurrency(calculatePurchaseCapRate(data))}%`,\r\n              },\r\n            ])}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={4}>{displayKeyValuePairs(summary)}</Col>\r\n          <Col md={8}>\r\n            <Tabs\r\n              id=\"pie-charts\"\r\n              activeKey={key}\r\n              onSelect={(k: string) => setKey(k)}\r\n              variant=\"pills\"\r\n              className=\"justify-content-center py-3\"\r\n            >\r\n              <Tab eventKey=\"expenses\" title=\"Expenses\">\r\n                {displayKeyValuePairs2(getExpenseTabKeyValuePairs)}\r\n                <div className=\"justify-content-center\">\r\n                  <Chart\r\n                    // width={\"500px\"}\r\n                    height={\"300px\"}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={getExpenseDataPoints()}\r\n                    options={{}}\r\n                    rootProps={{ \"expense-chart\": \"1\" }}\r\n                  />\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"income\" title=\"Income\">\r\n                <div className=\"pt-3\">\r\n                  {displayKeyValuePairs2(getIncomeTabKeyValuePairs)}\r\n                  <div className=\"justify-content-center\">\r\n                    <Chart\r\n                      // width={\"500px\"}\r\n                      height={\"300px\"}\r\n                      chartType=\"PieChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={getIncomeDataPoints()}\r\n                      options={{}}\r\n                      rootProps={{ \"income-chart\": \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"50percentRule\" title=\"50 % Rule\">\r\n                <div className=\"pt-3\">\r\n                  {displayKeyValuePairs2(fiftyPercentRule)}\r\n                </div>\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, InputGroup, Container } from \"react-bootstrap\";\r\nimport PropertyInfo from \"./Partials/PropertyInfo\";\r\nimport PurchaseInfo from \"./Partials/PurchaseInfo\";\r\nimport RentalInfo from \"./Partials/RentalInfo\";\r\nimport AnalysisOverTime from \"./Partials/Results\";\r\nimport { useLocalStorage } from \"../helpers\";\r\nimport Report from \"./Partials/Report\";\r\n\r\nexport interface Data {\r\n  //propertyInfo\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  zip: string;\r\n  annualPropertyTaxes: number;\r\n  mlsNumber: string;\r\n  salesDescription: string;\r\n  //features\r\n  numberOfBedrooms: number;\r\n  numberOfBathrooms: number;\r\n  propertyType: string;\r\n  totalSqFootage: number;\r\n  lotSize: number;\r\n  yearBuilt: number;\r\n\r\n  // purchaseInfo\r\n  purchasePrice: number;\r\n  afterRepairPrice: number;\r\n  purchaseClosingCost: number;\r\n  estimateRepairCost: number;\r\n  preRentHoldingCost: number;\r\n\r\n  //loanDetails\r\n  downPaymentPercentage: number;\r\n  loanInterestRate: number;\r\n  loanPeriod: number;\r\n\r\n  // rentalInfo:\r\n  //income\r\n  monthlyRent: number;\r\n  otherMonthlyIncome: number;\r\n\r\n  //fixedExpenses\r\n  monthlyElectricyCost: number;\r\n  monthlyWaterAndSewerCost: number;\r\n  monthlyPmiCost: number;\r\n  monthlyGarbageCost: number;\r\n  monthlyHoaCost: number;\r\n  monthlyInsurance: number;\r\n  otherMontnlyExpenses: number;\r\n\r\n  //variableExpenses\r\n  vacancyRate: number;\r\n  repairsAndMaintenanceRate: number;\r\n  capitalExpendituresRate: number;\r\n  propertyManagementRate: number;\r\n  insuranceRate: number;\r\n  taxRate: number;\r\n\r\n  //futureAssumptions\r\n  annualIncomeGrowth: number;\r\n  annualPropertyValueGrowth: number;\r\n  annualExpensesGrowth: number;\r\n  salesExpenses: number;\r\n\r\n  projectionYear: number;\r\n}\r\n\r\nconst BrrrrCalculator = () => {\r\n  const [savedData, setSavedData] = useLocalStorage(\"userInput\", {} as Data);\r\n  const [data, setData] = useState(savedData);\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    const newForm = {\r\n      ...data,\r\n      [event.target.name]:\r\n        event.target.type === \"text\" || value === \"\" ? value : Number(value),\r\n      // isNaN(Number(value)) || value === \"\" ? value : Number(value),\r\n    };\r\n    setData(newForm);\r\n    setSavedData(newForm);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"text-center\">{`Buy & Hold Analysis`}</h1>\r\n      <PropertyInfo data={data} handleOnChange={handleOnChange} />\r\n      <PurchaseInfo data={data} handleOnChange={handleOnChange} />\r\n      <RentalInfo data={data} handleOnChange={handleOnChange} />\r\n      <Report data={data} />\r\n      <AnalysisOverTime data={data} />\r\n\r\n      <div style={{ wordBreak: \"break-word\" }}>{JSON.stringify(data)}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BrrrrCalculator;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport BrrrrCalculator from \"./pages/BrrrrCalculator\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/re-calculator2\" component={HomePage} />\r\n      <Route path=\"/brrrr-calculator\" component={BrrrrCalculator} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}